{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@tudor/read-mode/./node_modules/@mozilla/readability/Readability-readerable.js","webpack://@tudor/read-mode/./node_modules/@mozilla/readability/Readability.js","webpack://@tudor/read-mode/./node_modules/@mozilla/readability/index.js","webpack://@tudor/read-mode/webpack/bootstrap","webpack://@tudor/read-mode/webpack/runtime/compat get default export","webpack://@tudor/read-mode/webpack/runtime/define property getters","webpack://@tudor/read-mode/webpack/runtime/hasOwnProperty shorthand","webpack://@tudor/read-mode/webpack/runtime/make namespace object","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/app']\"","webpack://@tudor/read-mode/./src/common/index.ts","webpack://@tudor/read-mode/external root \"flarum.core.compat['forum/app']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/extend']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/components/Button']\"","webpack://@tudor/read-mode/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/Model']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/Modal']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['utils/ItemList']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/LoadingPost']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/components/SplitDropdown']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['utils/PostControls']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/PostUser']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/PostMeta']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/PostEdited']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/components/Separator']\"","webpack://@tudor/read-mode/./src/forum/components/ArticleModal.js","webpack://@tudor/read-mode/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@tudor/read-mode/./src/forum/index.js","webpack://@tudor/read-mode/./src/forum/utils/getBrowser.ts"],"sourcesContent":["/* eslint-env es6:false */\n/*\n * Copyright (c) 2010 Arc90 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * This code is heavily based on Arc90's readability.js (1.7.1) script\n * available at: http://code.google.com/p/arc90labs-readability\n */\n\nvar REGEXPS = {\n  // NOTE: These two regular expressions are duplicated in\n  // Readability.js. Please keep both copies in sync.\n  unlikelyCandidates: /-ad-|ai2html|banner|breadcrumbs|combx|comment|community|cover-wrap|disqus|extra|footer|gdpr|header|legends|menu|related|remark|replies|rss|shoutbox|sidebar|skyscraper|social|sponsor|supplemental|ad-break|agegate|pagination|pager|popup|yom-remote/i,\n  okMaybeItsACandidate: /and|article|body|column|content|main|shadow/i,\n};\n\nfunction isNodeVisible(node) {\n  // Have to null-check node.style and node.className.indexOf to deal with SVG and MathML nodes.\n  return (!node.style || node.style.display != \"none\")\n    && !node.hasAttribute(\"hidden\")\n    //check for \"fallback-image\" so that wikimedia math images are displayed\n    && (!node.hasAttribute(\"aria-hidden\") || node.getAttribute(\"aria-hidden\") != \"true\" || (node.className && node.className.indexOf && node.className.indexOf(\"fallback-image\") !== -1));\n}\n\n/**\n * Decides whether or not the document is reader-able without parsing the whole thing.\n * @param {Object} options Configuration object.\n * @param {number} [options.minContentLength=140] The minimum node content length used to decide if the document is readerable.\n * @param {number} [options.minScore=20] The minumum cumulated 'score' used to determine if the document is readerable.\n * @param {Function} [options.visibilityChecker=isNodeVisible] The function used to determine if a node is visible.\n * @return {boolean} Whether or not we suspect Readability.parse() will suceeed at returning an article object.\n */\nfunction isProbablyReaderable(doc, options = {}) {\n  // For backward compatibility reasons 'options' can either be a configuration object or the function used\n  // to determine if a node is visible.\n  if (typeof options == \"function\") {\n    options = { visibilityChecker: options };\n  }\n\n  var defaultOptions = { minScore: 20, minContentLength: 140, visibilityChecker: isNodeVisible };\n  options = Object.assign(defaultOptions, options);\n\n  var nodes = doc.querySelectorAll(\"p, pre, article\");\n\n  // Get <div> nodes which have <br> node(s) and append them into the `nodes` variable.\n  // Some articles' DOM structures might look like\n  // <div>\n  //   Sentences<br>\n  //   <br>\n  //   Sentences<br>\n  // </div>\n  var brNodes = doc.querySelectorAll(\"div > br\");\n  if (brNodes.length) {\n    var set = new Set(nodes);\n    [].forEach.call(brNodes, function (node) {\n      set.add(node.parentNode);\n    });\n    nodes = Array.from(set);\n  }\n\n  var score = 0;\n  // This is a little cheeky, we use the accumulator 'score' to decide what to return from\n  // this callback:\n  return [].some.call(nodes, function (node) {\n    if (!options.visibilityChecker(node)) {\n      return false;\n    }\n\n    var matchString = node.className + \" \" + node.id;\n    if (REGEXPS.unlikelyCandidates.test(matchString) &&\n        !REGEXPS.okMaybeItsACandidate.test(matchString)) {\n      return false;\n    }\n\n    if (node.matches(\"li p\")) {\n      return false;\n    }\n\n    var textContentLength = node.textContent.trim().length;\n    if (textContentLength < options.minContentLength) {\n      return false;\n    }\n\n    score += Math.sqrt(textContentLength - options.minContentLength);\n\n    if (score > options.minScore) {\n      return true;\n    }\n    return false;\n  });\n}\n\nif (typeof module === \"object\") {\n  module.exports = isProbablyReaderable;\n}\n","/*eslint-env es6:false*/\n/*\n * Copyright (c) 2010 Arc90 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * This code is heavily based on Arc90's readability.js (1.7.1) script\n * available at: http://code.google.com/p/arc90labs-readability\n */\n\n/**\n * Public constructor.\n * @param {HTMLDocument} doc     The document to parse.\n * @param {Object}       options The options object.\n */\nfunction Readability(doc, options) {\n  // In some older versions, people passed a URI as the first argument. Cope:\n  if (options && options.documentElement) {\n    doc = options;\n    options = arguments[2];\n  } else if (!doc || !doc.documentElement) {\n    throw new Error(\"First argument to Readability constructor should be a document object.\");\n  }\n  options = options || {};\n\n  this._doc = doc;\n  this._docJSDOMParser = this._doc.firstChild.__JSDOMParser__;\n  this._articleTitle = null;\n  this._articleByline = null;\n  this._articleDir = null;\n  this._articleSiteName = null;\n  this._attempts = [];\n\n  // Configurable options\n  this._debug = !!options.debug;\n  this._maxElemsToParse = options.maxElemsToParse || this.DEFAULT_MAX_ELEMS_TO_PARSE;\n  this._nbTopCandidates = options.nbTopCandidates || this.DEFAULT_N_TOP_CANDIDATES;\n  this._charThreshold = options.charThreshold || this.DEFAULT_CHAR_THRESHOLD;\n  this._classesToPreserve = this.CLASSES_TO_PRESERVE.concat(options.classesToPreserve || []);\n  this._keepClasses = !!options.keepClasses;\n  this._serializer = options.serializer || function(el) {\n    return el.innerHTML;\n  };\n  this._disableJSONLD = !!options.disableJSONLD;\n\n  // Start with all flags set\n  this._flags = this.FLAG_STRIP_UNLIKELYS |\n                this.FLAG_WEIGHT_CLASSES |\n                this.FLAG_CLEAN_CONDITIONALLY;\n\n\n  // Control whether log messages are sent to the console\n  if (this._debug) {\n    let logNode = function(node) {\n      if (node.nodeType == node.TEXT_NODE) {\n        return `${node.nodeName} (\"${node.textContent}\")`;\n      }\n      let attrPairs = Array.from(node.attributes || [], function(attr) {\n        return `${attr.name}=\"${attr.value}\"`;\n      }).join(\" \");\n      return `<${node.localName} ${attrPairs}>`;\n    };\n    this.log = function () {\n      if (typeof dump !== \"undefined\") {\n        var msg = Array.prototype.map.call(arguments, function(x) {\n          return (x && x.nodeName) ? logNode(x) : x;\n        }).join(\" \");\n        dump(\"Reader: (Readability) \" + msg + \"\\n\");\n      } else if (typeof console !== \"undefined\") {\n        let args = Array.from(arguments, arg => {\n          if (arg && arg.nodeType == this.ELEMENT_NODE) {\n            return logNode(arg);\n          }\n          return arg;\n        });\n        args.unshift(\"Reader: (Readability)\");\n        console.log.apply(console, args);\n      }\n    };\n  } else {\n    this.log = function () {};\n  }\n}\n\nReadability.prototype = {\n  FLAG_STRIP_UNLIKELYS: 0x1,\n  FLAG_WEIGHT_CLASSES: 0x2,\n  FLAG_CLEAN_CONDITIONALLY: 0x4,\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n  ELEMENT_NODE: 1,\n  TEXT_NODE: 3,\n\n  // Max number of nodes supported by this parser. Default: 0 (no limit)\n  DEFAULT_MAX_ELEMS_TO_PARSE: 0,\n\n  // The number of top candidates to consider when analysing how\n  // tight the competition is among candidates.\n  DEFAULT_N_TOP_CANDIDATES: 5,\n\n  // Element tags to score by default.\n  DEFAULT_TAGS_TO_SCORE: \"section,h2,h3,h4,h5,h6,p,td,pre\".toUpperCase().split(\",\"),\n\n  // The default number of chars an article must have in order to return a result\n  DEFAULT_CHAR_THRESHOLD: 500,\n\n  // All of the regular expressions in use within readability.\n  // Defined up here so we don't instantiate them repeatedly in loops.\n  REGEXPS: {\n    // NOTE: These two regular expressions are duplicated in\n    // Readability-readerable.js. Please keep both copies in sync.\n    unlikelyCandidates: /-ad-|ai2html|banner|breadcrumbs|combx|comment|community|cover-wrap|disqus|extra|footer|gdpr|header|legends|menu|related|remark|replies|rss|shoutbox|sidebar|skyscraper|social|sponsor|supplemental|ad-break|agegate|pagination|pager|popup|yom-remote/i,\n    okMaybeItsACandidate: /and|article|body|column|content|main|shadow/i,\n\n    positive: /article|body|content|entry|hentry|h-entry|main|page|pagination|post|text|blog|story/i,\n    negative: /-ad-|hidden|^hid$| hid$| hid |^hid |banner|combx|comment|com-|contact|foot|footer|footnote|gdpr|masthead|media|meta|outbrain|promo|related|scroll|share|shoutbox|sidebar|skyscraper|sponsor|shopping|tags|tool|widget/i,\n    extraneous: /print|archive|comment|discuss|e[\\-]?mail|share|reply|all|login|sign|single|utility/i,\n    byline: /byline|author|dateline|writtenby|p-author/i,\n    replaceFonts: /<(\\/?)font[^>]*>/gi,\n    normalize: /\\s{2,}/g,\n    videos: /\\/\\/(www\\.)?((dailymotion|youtube|youtube-nocookie|player\\.vimeo|v\\.qq)\\.com|(archive|upload\\.wikimedia)\\.org|player\\.twitch\\.tv)/i,\n    shareElements: /(\\b|_)(share|sharedaddy)(\\b|_)/i,\n    nextLink: /(next|weiter|continue|>([^\\|]|$)|»([^\\|]|$))/i,\n    prevLink: /(prev|earl|old|new|<|«)/i,\n    tokenize: /\\W+/g,\n    whitespace: /^\\s*$/,\n    hasContent: /\\S$/,\n    hashUrl: /^#.+/,\n    srcsetUrl: /(\\S+)(\\s+[\\d.]+[xw])?(\\s*(?:,|$))/g,\n    b64DataUrl: /^data:\\s*([^\\s;,]+)\\s*;\\s*base64\\s*,/i,\n    // See: https://schema.org/Article\n    jsonLdArticleTypes: /^Article|AdvertiserContentArticle|NewsArticle|AnalysisNewsArticle|AskPublicNewsArticle|BackgroundNewsArticle|OpinionNewsArticle|ReportageNewsArticle|ReviewNewsArticle|Report|SatiricalArticle|ScholarlyArticle|MedicalScholarlyArticle|SocialMediaPosting|BlogPosting|LiveBlogPosting|DiscussionForumPosting|TechArticle|APIReference$/\n  },\n\n  UNLIKELY_ROLES: [ \"menu\", \"menubar\", \"complementary\", \"navigation\", \"alert\", \"alertdialog\", \"dialog\" ],\n\n  DIV_TO_P_ELEMS: new Set([ \"BLOCKQUOTE\", \"DL\", \"DIV\", \"IMG\", \"OL\", \"P\", \"PRE\", \"TABLE\", \"UL\" ]),\n\n  ALTER_TO_DIV_EXCEPTIONS: [\"DIV\", \"ARTICLE\", \"SECTION\", \"P\"],\n\n  PRESENTATIONAL_ATTRIBUTES: [ \"align\", \"background\", \"bgcolor\", \"border\", \"cellpadding\", \"cellspacing\", \"frame\", \"hspace\", \"rules\", \"style\", \"valign\", \"vspace\" ],\n\n  DEPRECATED_SIZE_ATTRIBUTE_ELEMS: [ \"TABLE\", \"TH\", \"TD\", \"HR\", \"PRE\" ],\n\n  // The commented out elements qualify as phrasing content but tend to be\n  // removed by readability when put into paragraphs, so we ignore them here.\n  PHRASING_ELEMS: [\n    // \"CANVAS\", \"IFRAME\", \"SVG\", \"VIDEO\",\n    \"ABBR\", \"AUDIO\", \"B\", \"BDO\", \"BR\", \"BUTTON\", \"CITE\", \"CODE\", \"DATA\",\n    \"DATALIST\", \"DFN\", \"EM\", \"EMBED\", \"I\", \"IMG\", \"INPUT\", \"KBD\", \"LABEL\",\n    \"MARK\", \"MATH\", \"METER\", \"NOSCRIPT\", \"OBJECT\", \"OUTPUT\", \"PROGRESS\", \"Q\",\n    \"RUBY\", \"SAMP\", \"SCRIPT\", \"SELECT\", \"SMALL\", \"SPAN\", \"STRONG\", \"SUB\",\n    \"SUP\", \"TEXTAREA\", \"TIME\", \"VAR\", \"WBR\"\n  ],\n\n  // These are the classes that readability sets itself.\n  CLASSES_TO_PRESERVE: [ \"page\" ],\n\n  // These are the list of HTML entities that need to be escaped.\n  HTML_ESCAPE_MAP: {\n    \"lt\": \"<\",\n    \"gt\": \">\",\n    \"amp\": \"&\",\n    \"quot\": '\"',\n    \"apos\": \"'\",\n  },\n\n  /**\n   * Run any post-process modifications to article content as necessary.\n   *\n   * @param Element\n   * @return void\n  **/\n  _postProcessContent: function(articleContent) {\n    // Readability cannot open relative uris so we convert them to absolute uris.\n    this._fixRelativeUris(articleContent);\n\n    this._simplifyNestedElements(articleContent);\n\n    if (!this._keepClasses) {\n      // Remove classes.\n      this._cleanClasses(articleContent);\n    }\n  },\n\n  /**\n   * Iterates over a NodeList, calls `filterFn` for each node and removes node\n   * if function returned `true`.\n   *\n   * If function is not passed, removes all the nodes in node list.\n   *\n   * @param NodeList nodeList The nodes to operate on\n   * @param Function filterFn the function to use as a filter\n   * @return void\n   */\n  _removeNodes: function(nodeList, filterFn) {\n    // Avoid ever operating on live node lists.\n    if (this._docJSDOMParser && nodeList._isLiveNodeList) {\n      throw new Error(\"Do not pass live node lists to _removeNodes\");\n    }\n    for (var i = nodeList.length - 1; i >= 0; i--) {\n      var node = nodeList[i];\n      var parentNode = node.parentNode;\n      if (parentNode) {\n        if (!filterFn || filterFn.call(this, node, i, nodeList)) {\n          parentNode.removeChild(node);\n        }\n      }\n    }\n  },\n\n  /**\n   * Iterates over a NodeList, and calls _setNodeTag for each node.\n   *\n   * @param NodeList nodeList The nodes to operate on\n   * @param String newTagName the new tag name to use\n   * @return void\n   */\n  _replaceNodeTags: function(nodeList, newTagName) {\n    // Avoid ever operating on live node lists.\n    if (this._docJSDOMParser && nodeList._isLiveNodeList) {\n      throw new Error(\"Do not pass live node lists to _replaceNodeTags\");\n    }\n    for (const node of nodeList) {\n      this._setNodeTag(node, newTagName);\n    }\n  },\n\n  /**\n   * Iterate over a NodeList, which doesn't natively fully implement the Array\n   * interface.\n   *\n   * For convenience, the current object context is applied to the provided\n   * iterate function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The iterate function.\n   * @return void\n   */\n  _forEachNode: function(nodeList, fn) {\n    Array.prototype.forEach.call(nodeList, fn, this);\n  },\n\n  /**\n   * Iterate over a NodeList, and return the first node that passes\n   * the supplied test function\n   *\n   * For convenience, the current object context is applied to the provided\n   * test function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The test function.\n   * @return void\n   */\n  _findNode: function(nodeList, fn) {\n    return Array.prototype.find.call(nodeList, fn, this);\n  },\n\n  /**\n   * Iterate over a NodeList, return true if any of the provided iterate\n   * function calls returns true, false otherwise.\n   *\n   * For convenience, the current object context is applied to the\n   * provided iterate function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The iterate function.\n   * @return Boolean\n   */\n  _someNode: function(nodeList, fn) {\n    return Array.prototype.some.call(nodeList, fn, this);\n  },\n\n  /**\n   * Iterate over a NodeList, return true if all of the provided iterate\n   * function calls return true, false otherwise.\n   *\n   * For convenience, the current object context is applied to the\n   * provided iterate function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The iterate function.\n   * @return Boolean\n   */\n  _everyNode: function(nodeList, fn) {\n    return Array.prototype.every.call(nodeList, fn, this);\n  },\n\n  /**\n   * Concat all nodelists passed as arguments.\n   *\n   * @return ...NodeList\n   * @return Array\n   */\n  _concatNodeLists: function() {\n    var slice = Array.prototype.slice;\n    var args = slice.call(arguments);\n    var nodeLists = args.map(function(list) {\n      return slice.call(list);\n    });\n    return Array.prototype.concat.apply([], nodeLists);\n  },\n\n  _getAllNodesWithTag: function(node, tagNames) {\n    if (node.querySelectorAll) {\n      return node.querySelectorAll(tagNames.join(\",\"));\n    }\n    return [].concat.apply([], tagNames.map(function(tag) {\n      var collection = node.getElementsByTagName(tag);\n      return Array.isArray(collection) ? collection : Array.from(collection);\n    }));\n  },\n\n  /**\n   * Removes the class=\"\" attribute from every element in the given\n   * subtree, except those that match CLASSES_TO_PRESERVE and\n   * the classesToPreserve array from the options object.\n   *\n   * @param Element\n   * @return void\n   */\n  _cleanClasses: function(node) {\n    var classesToPreserve = this._classesToPreserve;\n    var className = (node.getAttribute(\"class\") || \"\")\n      .split(/\\s+/)\n      .filter(function(cls) {\n        return classesToPreserve.indexOf(cls) != -1;\n      })\n      .join(\" \");\n\n    if (className) {\n      node.setAttribute(\"class\", className);\n    } else {\n      node.removeAttribute(\"class\");\n    }\n\n    for (node = node.firstElementChild; node; node = node.nextElementSibling) {\n      this._cleanClasses(node);\n    }\n  },\n\n  /**\n   * Converts each <a> and <img> uri in the given element to an absolute URI,\n   * ignoring #ref URIs.\n   *\n   * @param Element\n   * @return void\n   */\n  _fixRelativeUris: function(articleContent) {\n    var baseURI = this._doc.baseURI;\n    var documentURI = this._doc.documentURI;\n    function toAbsoluteURI(uri) {\n      // Leave hash links alone if the base URI matches the document URI:\n      if (baseURI == documentURI && uri.charAt(0) == \"#\") {\n        return uri;\n      }\n\n      // Otherwise, resolve against base URI:\n      try {\n        return new URL(uri, baseURI).href;\n      } catch (ex) {\n        // Something went wrong, just return the original:\n      }\n      return uri;\n    }\n\n    var links = this._getAllNodesWithTag(articleContent, [\"a\"]);\n    this._forEachNode(links, function(link) {\n      var href = link.getAttribute(\"href\");\n      if (href) {\n        // Remove links with javascript: URIs, since\n        // they won't work after scripts have been removed from the page.\n        if (href.indexOf(\"javascript:\") === 0) {\n          // if the link only contains simple text content, it can be converted to a text node\n          if (link.childNodes.length === 1 && link.childNodes[0].nodeType === this.TEXT_NODE) {\n            var text = this._doc.createTextNode(link.textContent);\n            link.parentNode.replaceChild(text, link);\n          } else {\n            // if the link has multiple children, they should all be preserved\n            var container = this._doc.createElement(\"span\");\n            while (link.firstChild) {\n              container.appendChild(link.firstChild);\n            }\n            link.parentNode.replaceChild(container, link);\n          }\n        } else {\n          link.setAttribute(\"href\", toAbsoluteURI(href));\n        }\n      }\n    });\n\n    var medias = this._getAllNodesWithTag(articleContent, [\n      \"img\", \"picture\", \"figure\", \"video\", \"audio\", \"source\"\n    ]);\n\n    this._forEachNode(medias, function(media) {\n      var src = media.getAttribute(\"src\");\n      var poster = media.getAttribute(\"poster\");\n      var srcset = media.getAttribute(\"srcset\");\n\n      if (src) {\n        media.setAttribute(\"src\", toAbsoluteURI(src));\n      }\n\n      if (poster) {\n        media.setAttribute(\"poster\", toAbsoluteURI(poster));\n      }\n\n      if (srcset) {\n        var newSrcset = srcset.replace(this.REGEXPS.srcsetUrl, function(_, p1, p2, p3) {\n          return toAbsoluteURI(p1) + (p2 || \"\") + p3;\n        });\n\n        media.setAttribute(\"srcset\", newSrcset);\n      }\n    });\n  },\n\n  _simplifyNestedElements: function(articleContent) {\n    var node = articleContent;\n\n    while (node) {\n      if (node.parentNode && [\"DIV\", \"SECTION\"].includes(node.tagName) && !(node.id && node.id.startsWith(\"readability\"))) {\n        if (this._isElementWithoutContent(node)) {\n          node = this._removeAndGetNext(node);\n          continue;\n        } else if (this._hasSingleTagInsideElement(node, \"DIV\") || this._hasSingleTagInsideElement(node, \"SECTION\")) {\n          var child = node.children[0];\n          for (var i = 0; i < node.attributes.length; i++) {\n            child.setAttribute(node.attributes[i].name, node.attributes[i].value);\n          }\n          node.parentNode.replaceChild(child, node);\n          node = child;\n          continue;\n        }\n      }\n\n      node = this._getNextNode(node);\n    }\n  },\n\n  /**\n   * Get the article title as an H1.\n   *\n   * @return string\n   **/\n  _getArticleTitle: function() {\n    var doc = this._doc;\n    var curTitle = \"\";\n    var origTitle = \"\";\n\n    try {\n      curTitle = origTitle = doc.title.trim();\n\n      // If they had an element with id \"title\" in their HTML\n      if (typeof curTitle !== \"string\")\n        curTitle = origTitle = this._getInnerText(doc.getElementsByTagName(\"title\")[0]);\n    } catch (e) {/* ignore exceptions setting the title. */}\n\n    var titleHadHierarchicalSeparators = false;\n    function wordCount(str) {\n      return str.split(/\\s+/).length;\n    }\n\n    // If there's a separator in the title, first remove the final part\n    if ((/ [\\|\\-\\\\\\/>»] /).test(curTitle)) {\n      titleHadHierarchicalSeparators = / [\\\\\\/>»] /.test(curTitle);\n      curTitle = origTitle.replace(/(.*)[\\|\\-\\\\\\/>»] .*/gi, \"$1\");\n\n      // If the resulting title is too short (3 words or fewer), remove\n      // the first part instead:\n      if (wordCount(curTitle) < 3)\n        curTitle = origTitle.replace(/[^\\|\\-\\\\\\/>»]*[\\|\\-\\\\\\/>»](.*)/gi, \"$1\");\n    } else if (curTitle.indexOf(\": \") !== -1) {\n      // Check if we have an heading containing this exact string, so we\n      // could assume it's the full title.\n      var headings = this._concatNodeLists(\n        doc.getElementsByTagName(\"h1\"),\n        doc.getElementsByTagName(\"h2\")\n      );\n      var trimmedTitle = curTitle.trim();\n      var match = this._someNode(headings, function(heading) {\n        return heading.textContent.trim() === trimmedTitle;\n      });\n\n      // If we don't, let's extract the title out of the original title string.\n      if (!match) {\n        curTitle = origTitle.substring(origTitle.lastIndexOf(\":\") + 1);\n\n        // If the title is now too short, try the first colon instead:\n        if (wordCount(curTitle) < 3) {\n          curTitle = origTitle.substring(origTitle.indexOf(\":\") + 1);\n          // But if we have too many words before the colon there's something weird\n          // with the titles and the H tags so let's just use the original title instead\n        } else if (wordCount(origTitle.substr(0, origTitle.indexOf(\":\"))) > 5) {\n          curTitle = origTitle;\n        }\n      }\n    } else if (curTitle.length > 150 || curTitle.length < 15) {\n      var hOnes = doc.getElementsByTagName(\"h1\");\n\n      if (hOnes.length === 1)\n        curTitle = this._getInnerText(hOnes[0]);\n    }\n\n    curTitle = curTitle.trim().replace(this.REGEXPS.normalize, \" \");\n    // If we now have 4 words or fewer as our title, and either no\n    // 'hierarchical' separators (\\, /, > or ») were found in the original\n    // title or we decreased the number of words by more than 1 word, use\n    // the original title.\n    var curTitleWordCount = wordCount(curTitle);\n    if (curTitleWordCount <= 4 &&\n        (!titleHadHierarchicalSeparators ||\n         curTitleWordCount != wordCount(origTitle.replace(/[\\|\\-\\\\\\/>»]+/g, \"\")) - 1)) {\n      curTitle = origTitle;\n    }\n\n    return curTitle;\n  },\n\n  /**\n   * Prepare the HTML document for readability to scrape it.\n   * This includes things like stripping javascript, CSS, and handling terrible markup.\n   *\n   * @return void\n   **/\n  _prepDocument: function() {\n    var doc = this._doc;\n\n    // Remove all style tags in head\n    this._removeNodes(this._getAllNodesWithTag(doc, [\"style\"]));\n\n    if (doc.body) {\n      this._replaceBrs(doc.body);\n    }\n\n    this._replaceNodeTags(this._getAllNodesWithTag(doc, [\"font\"]), \"SPAN\");\n  },\n\n  /**\n   * Finds the next node, starting from the given node, and ignoring\n   * whitespace in between. If the given node is an element, the same node is\n   * returned.\n   */\n  _nextNode: function (node) {\n    var next = node;\n    while (next\n        && (next.nodeType != this.ELEMENT_NODE)\n        && this.REGEXPS.whitespace.test(next.textContent)) {\n      next = next.nextSibling;\n    }\n    return next;\n  },\n\n  /**\n   * Replaces 2 or more successive <br> elements with a single <p>.\n   * Whitespace between <br> elements are ignored. For example:\n   *   <div>foo<br>bar<br> <br><br>abc</div>\n   * will become:\n   *   <div>foo<br>bar<p>abc</p></div>\n   */\n  _replaceBrs: function (elem) {\n    this._forEachNode(this._getAllNodesWithTag(elem, [\"br\"]), function(br) {\n      var next = br.nextSibling;\n\n      // Whether 2 or more <br> elements have been found and replaced with a\n      // <p> block.\n      var replaced = false;\n\n      // If we find a <br> chain, remove the <br>s until we hit another node\n      // or non-whitespace. This leaves behind the first <br> in the chain\n      // (which will be replaced with a <p> later).\n      while ((next = this._nextNode(next)) && (next.tagName == \"BR\")) {\n        replaced = true;\n        var brSibling = next.nextSibling;\n        next.parentNode.removeChild(next);\n        next = brSibling;\n      }\n\n      // If we removed a <br> chain, replace the remaining <br> with a <p>. Add\n      // all sibling nodes as children of the <p> until we hit another <br>\n      // chain.\n      if (replaced) {\n        var p = this._doc.createElement(\"p\");\n        br.parentNode.replaceChild(p, br);\n\n        next = p.nextSibling;\n        while (next) {\n          // If we've hit another <br><br>, we're done adding children to this <p>.\n          if (next.tagName == \"BR\") {\n            var nextElem = this._nextNode(next.nextSibling);\n            if (nextElem && nextElem.tagName == \"BR\")\n              break;\n          }\n\n          if (!this._isPhrasingContent(next))\n            break;\n\n          // Otherwise, make this node a child of the new <p>.\n          var sibling = next.nextSibling;\n          p.appendChild(next);\n          next = sibling;\n        }\n\n        while (p.lastChild && this._isWhitespace(p.lastChild)) {\n          p.removeChild(p.lastChild);\n        }\n\n        if (p.parentNode.tagName === \"P\")\n          this._setNodeTag(p.parentNode, \"DIV\");\n      }\n    });\n  },\n\n  _setNodeTag: function (node, tag) {\n    this.log(\"_setNodeTag\", node, tag);\n    if (this._docJSDOMParser) {\n      node.localName = tag.toLowerCase();\n      node.tagName = tag.toUpperCase();\n      return node;\n    }\n\n    var replacement = node.ownerDocument.createElement(tag);\n    while (node.firstChild) {\n      replacement.appendChild(node.firstChild);\n    }\n    node.parentNode.replaceChild(replacement, node);\n    if (node.readability)\n      replacement.readability = node.readability;\n\n    for (var i = 0; i < node.attributes.length; i++) {\n      try {\n        replacement.setAttribute(node.attributes[i].name, node.attributes[i].value);\n      } catch (ex) {\n        /* it's possible for setAttribute() to throw if the attribute name\n         * isn't a valid XML Name. Such attributes can however be parsed from\n         * source in HTML docs, see https://github.com/whatwg/html/issues/4275,\n         * so we can hit them here and then throw. We don't care about such\n         * attributes so we ignore them.\n         */\n      }\n    }\n    return replacement;\n  },\n\n  /**\n   * Prepare the article node for display. Clean out any inline styles,\n   * iframes, forms, strip extraneous <p> tags, etc.\n   *\n   * @param Element\n   * @return void\n   **/\n  _prepArticle: function(articleContent) {\n    this._cleanStyles(articleContent);\n\n    // Check for data tables before we continue, to avoid removing items in\n    // those tables, which will often be isolated even though they're\n    // visually linked to other content-ful elements (text, images, etc.).\n    this._markDataTables(articleContent);\n\n    this._fixLazyImages(articleContent);\n\n    // Clean out junk from the article content\n    this._cleanConditionally(articleContent, \"form\");\n    this._cleanConditionally(articleContent, \"fieldset\");\n    this._clean(articleContent, \"object\");\n    this._clean(articleContent, \"embed\");\n    this._clean(articleContent, \"footer\");\n    this._clean(articleContent, \"link\");\n    this._clean(articleContent, \"aside\");\n\n    // Clean out elements with little content that have \"share\" in their id/class combinations from final top candidates,\n    // which means we don't remove the top candidates even they have \"share\".\n\n    var shareElementThreshold = this.DEFAULT_CHAR_THRESHOLD;\n\n    this._forEachNode(articleContent.children, function (topCandidate) {\n      this._cleanMatchedNodes(topCandidate, function (node, matchString) {\n        return this.REGEXPS.shareElements.test(matchString) && node.textContent.length < shareElementThreshold;\n      });\n    });\n\n    this._clean(articleContent, \"iframe\");\n    this._clean(articleContent, \"input\");\n    this._clean(articleContent, \"textarea\");\n    this._clean(articleContent, \"select\");\n    this._clean(articleContent, \"button\");\n    this._cleanHeaders(articleContent);\n\n    // Do these last as the previous stuff may have removed junk\n    // that will affect these\n    this._cleanConditionally(articleContent, \"table\");\n    this._cleanConditionally(articleContent, \"ul\");\n    this._cleanConditionally(articleContent, \"div\");\n\n    // replace H1 with H2 as H1 should be only title that is displayed separately\n    this._replaceNodeTags(this._getAllNodesWithTag(articleContent, [\"h1\"]), \"h2\");\n\n    // Remove extra paragraphs\n    this._removeNodes(this._getAllNodesWithTag(articleContent, [\"p\"]), function (paragraph) {\n      var imgCount = paragraph.getElementsByTagName(\"img\").length;\n      var embedCount = paragraph.getElementsByTagName(\"embed\").length;\n      var objectCount = paragraph.getElementsByTagName(\"object\").length;\n      // At this point, nasty iframes have been removed, only remain embedded video ones.\n      var iframeCount = paragraph.getElementsByTagName(\"iframe\").length;\n      var totalCount = imgCount + embedCount + objectCount + iframeCount;\n\n      return totalCount === 0 && !this._getInnerText(paragraph, false);\n    });\n\n    this._forEachNode(this._getAllNodesWithTag(articleContent, [\"br\"]), function(br) {\n      var next = this._nextNode(br.nextSibling);\n      if (next && next.tagName == \"P\")\n        br.parentNode.removeChild(br);\n    });\n\n    // Remove single-cell tables\n    this._forEachNode(this._getAllNodesWithTag(articleContent, [\"table\"]), function(table) {\n      var tbody = this._hasSingleTagInsideElement(table, \"TBODY\") ? table.firstElementChild : table;\n      if (this._hasSingleTagInsideElement(tbody, \"TR\")) {\n        var row = tbody.firstElementChild;\n        if (this._hasSingleTagInsideElement(row, \"TD\")) {\n          var cell = row.firstElementChild;\n          cell = this._setNodeTag(cell, this._everyNode(cell.childNodes, this._isPhrasingContent) ? \"P\" : \"DIV\");\n          table.parentNode.replaceChild(cell, table);\n        }\n      }\n    });\n  },\n\n  /**\n   * Initialize a node with the readability object. Also checks the\n   * className/id for special names to add to its score.\n   *\n   * @param Element\n   * @return void\n  **/\n  _initializeNode: function(node) {\n    node.readability = {\"contentScore\": 0};\n\n    switch (node.tagName) {\n      case \"DIV\":\n        node.readability.contentScore += 5;\n        break;\n\n      case \"PRE\":\n      case \"TD\":\n      case \"BLOCKQUOTE\":\n        node.readability.contentScore += 3;\n        break;\n\n      case \"ADDRESS\":\n      case \"OL\":\n      case \"UL\":\n      case \"DL\":\n      case \"DD\":\n      case \"DT\":\n      case \"LI\":\n      case \"FORM\":\n        node.readability.contentScore -= 3;\n        break;\n\n      case \"H1\":\n      case \"H2\":\n      case \"H3\":\n      case \"H4\":\n      case \"H5\":\n      case \"H6\":\n      case \"TH\":\n        node.readability.contentScore -= 5;\n        break;\n    }\n\n    node.readability.contentScore += this._getClassWeight(node);\n  },\n\n  _removeAndGetNext: function(node) {\n    var nextNode = this._getNextNode(node, true);\n    node.parentNode.removeChild(node);\n    return nextNode;\n  },\n\n  /**\n   * Traverse the DOM from node to node, starting at the node passed in.\n   * Pass true for the second parameter to indicate this node itself\n   * (and its kids) are going away, and we want the next node over.\n   *\n   * Calling this in a loop will traverse the DOM depth-first.\n   */\n  _getNextNode: function(node, ignoreSelfAndKids) {\n    // First check for kids if those aren't being ignored\n    if (!ignoreSelfAndKids && node.firstElementChild) {\n      return node.firstElementChild;\n    }\n    // Then for siblings...\n    if (node.nextElementSibling) {\n      return node.nextElementSibling;\n    }\n    // And finally, move up the parent chain *and* find a sibling\n    // (because this is depth-first traversal, we will have already\n    // seen the parent nodes themselves).\n    do {\n      node = node.parentNode;\n    } while (node && !node.nextElementSibling);\n    return node && node.nextElementSibling;\n  },\n\n  // compares second text to first one\n  // 1 = same text, 0 = completely different text\n  // works the way that it splits both texts into words and then finds words that are unique in second text\n  // the result is given by the lower length of unique parts\n  _textSimilarity: function(textA, textB) {\n    var tokensA = textA.toLowerCase().split(this.REGEXPS.tokenize).filter(Boolean);\n    var tokensB = textB.toLowerCase().split(this.REGEXPS.tokenize).filter(Boolean);\n    if (!tokensA.length || !tokensB.length) {\n      return 0;\n    }\n    var uniqTokensB = tokensB.filter(token => !tokensA.includes(token));\n    var distanceB = uniqTokensB.join(\" \").length / tokensB.join(\" \").length;\n    return 1 - distanceB;\n  },\n\n  _checkByline: function(node, matchString) {\n    if (this._articleByline) {\n      return false;\n    }\n\n    if (node.getAttribute !== undefined) {\n      var rel = node.getAttribute(\"rel\");\n      var itemprop = node.getAttribute(\"itemprop\");\n    }\n\n    if ((rel === \"author\" || (itemprop && itemprop.indexOf(\"author\") !== -1) || this.REGEXPS.byline.test(matchString)) && this._isValidByline(node.textContent)) {\n      this._articleByline = node.textContent.trim();\n      return true;\n    }\n\n    return false;\n  },\n\n  _getNodeAncestors: function(node, maxDepth) {\n    maxDepth = maxDepth || 0;\n    var i = 0, ancestors = [];\n    while (node.parentNode) {\n      ancestors.push(node.parentNode);\n      if (maxDepth && ++i === maxDepth)\n        break;\n      node = node.parentNode;\n    }\n    return ancestors;\n  },\n\n  /***\n   * grabArticle - Using a variety of metrics (content score, classname, element types), find the content that is\n   *         most likely to be the stuff a user wants to read. Then return it wrapped up in a div.\n   *\n   * @param page a document to run upon. Needs to be a full document, complete with body.\n   * @return Element\n  **/\n  _grabArticle: function (page) {\n    this.log(\"**** grabArticle ****\");\n    var doc = this._doc;\n    var isPaging = page !== null;\n    page = page ? page : this._doc.body;\n\n    // We can't grab an article if we don't have a page!\n    if (!page) {\n      this.log(\"No body found in document. Abort.\");\n      return null;\n    }\n\n    var pageCacheHtml = page.innerHTML;\n\n    while (true) {\n      this.log(\"Starting grabArticle loop\");\n      var stripUnlikelyCandidates = this._flagIsActive(this.FLAG_STRIP_UNLIKELYS);\n\n      // First, node prepping. Trash nodes that look cruddy (like ones with the\n      // class name \"comment\", etc), and turn divs into P tags where they have been\n      // used inappropriately (as in, where they contain no other block level elements.)\n      var elementsToScore = [];\n      var node = this._doc.documentElement;\n\n      let shouldRemoveTitleHeader = true;\n\n      while (node) {\n\n        if (node.tagName === \"HTML\") {\n          this._articleLang = node.getAttribute(\"lang\");\n        }\n\n        var matchString = node.className + \" \" + node.id;\n\n        if (!this._isProbablyVisible(node)) {\n          this.log(\"Removing hidden node - \" + matchString);\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        // Check to see if this node is a byline, and remove it if it is.\n        if (this._checkByline(node, matchString)) {\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        if (shouldRemoveTitleHeader && this._headerDuplicatesTitle(node)) {\n          this.log(\"Removing header: \", node.textContent.trim(), this._articleTitle.trim());\n          shouldRemoveTitleHeader = false;\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        // Remove unlikely candidates\n        if (stripUnlikelyCandidates) {\n          if (this.REGEXPS.unlikelyCandidates.test(matchString) &&\n              !this.REGEXPS.okMaybeItsACandidate.test(matchString) &&\n              !this._hasAncestorTag(node, \"table\") &&\n              !this._hasAncestorTag(node, \"code\") &&\n              node.tagName !== \"BODY\" &&\n              node.tagName !== \"A\") {\n            this.log(\"Removing unlikely candidate - \" + matchString);\n            node = this._removeAndGetNext(node);\n            continue;\n          }\n\n          if (this.UNLIKELY_ROLES.includes(node.getAttribute(\"role\"))) {\n            this.log(\"Removing content with role \" + node.getAttribute(\"role\") + \" - \" + matchString);\n            node = this._removeAndGetNext(node);\n            continue;\n          }\n        }\n\n        // Remove DIV, SECTION, and HEADER nodes without any content(e.g. text, image, video, or iframe).\n        if ((node.tagName === \"DIV\" || node.tagName === \"SECTION\" || node.tagName === \"HEADER\" ||\n             node.tagName === \"H1\" || node.tagName === \"H2\" || node.tagName === \"H3\" ||\n             node.tagName === \"H4\" || node.tagName === \"H5\" || node.tagName === \"H6\") &&\n            this._isElementWithoutContent(node)) {\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        if (this.DEFAULT_TAGS_TO_SCORE.indexOf(node.tagName) !== -1) {\n          elementsToScore.push(node);\n        }\n\n        // Turn all divs that don't have children block level elements into p's\n        if (node.tagName === \"DIV\") {\n          // Put phrasing content into paragraphs.\n          var p = null;\n          var childNode = node.firstChild;\n          while (childNode) {\n            var nextSibling = childNode.nextSibling;\n            if (this._isPhrasingContent(childNode)) {\n              if (p !== null) {\n                p.appendChild(childNode);\n              } else if (!this._isWhitespace(childNode)) {\n                p = doc.createElement(\"p\");\n                node.replaceChild(p, childNode);\n                p.appendChild(childNode);\n              }\n            } else if (p !== null) {\n              while (p.lastChild && this._isWhitespace(p.lastChild)) {\n                p.removeChild(p.lastChild);\n              }\n              p = null;\n            }\n            childNode = nextSibling;\n          }\n\n          // Sites like http://mobile.slate.com encloses each paragraph with a DIV\n          // element. DIVs with only a P element inside and no text content can be\n          // safely converted into plain P elements to avoid confusing the scoring\n          // algorithm with DIVs with are, in practice, paragraphs.\n          if (this._hasSingleTagInsideElement(node, \"P\") && this._getLinkDensity(node) < 0.25) {\n            var newNode = node.children[0];\n            node.parentNode.replaceChild(newNode, node);\n            node = newNode;\n            elementsToScore.push(node);\n          } else if (!this._hasChildBlockElement(node)) {\n            node = this._setNodeTag(node, \"P\");\n            elementsToScore.push(node);\n          }\n        }\n        node = this._getNextNode(node);\n      }\n\n      /**\n       * Loop through all paragraphs, and assign a score to them based on how content-y they look.\n       * Then add their score to their parent node.\n       *\n       * A score is determined by things like number of commas, class names, etc. Maybe eventually link density.\n      **/\n      var candidates = [];\n      this._forEachNode(elementsToScore, function(elementToScore) {\n        if (!elementToScore.parentNode || typeof(elementToScore.parentNode.tagName) === \"undefined\")\n          return;\n\n        // If this paragraph is less than 25 characters, don't even count it.\n        var innerText = this._getInnerText(elementToScore);\n        if (innerText.length < 25)\n          return;\n\n        // Exclude nodes with no ancestor.\n        var ancestors = this._getNodeAncestors(elementToScore, 5);\n        if (ancestors.length === 0)\n          return;\n\n        var contentScore = 0;\n\n        // Add a point for the paragraph itself as a base.\n        contentScore += 1;\n\n        // Add points for any commas within this paragraph.\n        contentScore += innerText.split(\",\").length;\n\n        // For every 100 characters in this paragraph, add another point. Up to 3 points.\n        contentScore += Math.min(Math.floor(innerText.length / 100), 3);\n\n        // Initialize and score ancestors.\n        this._forEachNode(ancestors, function(ancestor, level) {\n          if (!ancestor.tagName || !ancestor.parentNode || typeof(ancestor.parentNode.tagName) === \"undefined\")\n            return;\n\n          if (typeof(ancestor.readability) === \"undefined\") {\n            this._initializeNode(ancestor);\n            candidates.push(ancestor);\n          }\n\n          // Node score divider:\n          // - parent:             1 (no division)\n          // - grandparent:        2\n          // - great grandparent+: ancestor level * 3\n          if (level === 0)\n            var scoreDivider = 1;\n          else if (level === 1)\n            scoreDivider = 2;\n          else\n            scoreDivider = level * 3;\n          ancestor.readability.contentScore += contentScore / scoreDivider;\n        });\n      });\n\n      // After we've calculated scores, loop through all of the possible\n      // candidate nodes we found and find the one with the highest score.\n      var topCandidates = [];\n      for (var c = 0, cl = candidates.length; c < cl; c += 1) {\n        var candidate = candidates[c];\n\n        // Scale the final candidates score based on link density. Good content\n        // should have a relatively small link density (5% or less) and be mostly\n        // unaffected by this operation.\n        var candidateScore = candidate.readability.contentScore * (1 - this._getLinkDensity(candidate));\n        candidate.readability.contentScore = candidateScore;\n\n        this.log(\"Candidate:\", candidate, \"with score \" + candidateScore);\n\n        for (var t = 0; t < this._nbTopCandidates; t++) {\n          var aTopCandidate = topCandidates[t];\n\n          if (!aTopCandidate || candidateScore > aTopCandidate.readability.contentScore) {\n            topCandidates.splice(t, 0, candidate);\n            if (topCandidates.length > this._nbTopCandidates)\n              topCandidates.pop();\n            break;\n          }\n        }\n      }\n\n      var topCandidate = topCandidates[0] || null;\n      var neededToCreateTopCandidate = false;\n      var parentOfTopCandidate;\n\n      // If we still have no top candidate, just use the body as a last resort.\n      // We also have to copy the body node so it is something we can modify.\n      if (topCandidate === null || topCandidate.tagName === \"BODY\") {\n        // Move all of the page's children into topCandidate\n        topCandidate = doc.createElement(\"DIV\");\n        neededToCreateTopCandidate = true;\n        // Move everything (not just elements, also text nodes etc.) into the container\n        // so we even include text directly in the body:\n        while (page.firstChild) {\n          this.log(\"Moving child out:\", page.firstChild);\n          topCandidate.appendChild(page.firstChild);\n        }\n\n        page.appendChild(topCandidate);\n\n        this._initializeNode(topCandidate);\n      } else if (topCandidate) {\n        // Find a better top candidate node if it contains (at least three) nodes which belong to `topCandidates` array\n        // and whose scores are quite closed with current `topCandidate` node.\n        var alternativeCandidateAncestors = [];\n        for (var i = 1; i < topCandidates.length; i++) {\n          if (topCandidates[i].readability.contentScore / topCandidate.readability.contentScore >= 0.75) {\n            alternativeCandidateAncestors.push(this._getNodeAncestors(topCandidates[i]));\n          }\n        }\n        var MINIMUM_TOPCANDIDATES = 3;\n        if (alternativeCandidateAncestors.length >= MINIMUM_TOPCANDIDATES) {\n          parentOfTopCandidate = topCandidate.parentNode;\n          while (parentOfTopCandidate.tagName !== \"BODY\") {\n            var listsContainingThisAncestor = 0;\n            for (var ancestorIndex = 0; ancestorIndex < alternativeCandidateAncestors.length && listsContainingThisAncestor < MINIMUM_TOPCANDIDATES; ancestorIndex++) {\n              listsContainingThisAncestor += Number(alternativeCandidateAncestors[ancestorIndex].includes(parentOfTopCandidate));\n            }\n            if (listsContainingThisAncestor >= MINIMUM_TOPCANDIDATES) {\n              topCandidate = parentOfTopCandidate;\n              break;\n            }\n            parentOfTopCandidate = parentOfTopCandidate.parentNode;\n          }\n        }\n        if (!topCandidate.readability) {\n          this._initializeNode(topCandidate);\n        }\n\n        // Because of our bonus system, parents of candidates might have scores\n        // themselves. They get half of the node. There won't be nodes with higher\n        // scores than our topCandidate, but if we see the score going *up* in the first\n        // few steps up the tree, that's a decent sign that there might be more content\n        // lurking in other places that we want to unify in. The sibling stuff\n        // below does some of that - but only if we've looked high enough up the DOM\n        // tree.\n        parentOfTopCandidate = topCandidate.parentNode;\n        var lastScore = topCandidate.readability.contentScore;\n        // The scores shouldn't get too low.\n        var scoreThreshold = lastScore / 3;\n        while (parentOfTopCandidate.tagName !== \"BODY\") {\n          if (!parentOfTopCandidate.readability) {\n            parentOfTopCandidate = parentOfTopCandidate.parentNode;\n            continue;\n          }\n          var parentScore = parentOfTopCandidate.readability.contentScore;\n          if (parentScore < scoreThreshold)\n            break;\n          if (parentScore > lastScore) {\n            // Alright! We found a better parent to use.\n            topCandidate = parentOfTopCandidate;\n            break;\n          }\n          lastScore = parentOfTopCandidate.readability.contentScore;\n          parentOfTopCandidate = parentOfTopCandidate.parentNode;\n        }\n\n        // If the top candidate is the only child, use parent instead. This will help sibling\n        // joining logic when adjacent content is actually located in parent's sibling node.\n        parentOfTopCandidate = topCandidate.parentNode;\n        while (parentOfTopCandidate.tagName != \"BODY\" && parentOfTopCandidate.children.length == 1) {\n          topCandidate = parentOfTopCandidate;\n          parentOfTopCandidate = topCandidate.parentNode;\n        }\n        if (!topCandidate.readability) {\n          this._initializeNode(topCandidate);\n        }\n      }\n\n      // Now that we have the top candidate, look through its siblings for content\n      // that might also be related. Things like preambles, content split by ads\n      // that we removed, etc.\n      var articleContent = doc.createElement(\"DIV\");\n      if (isPaging)\n        articleContent.id = \"readability-content\";\n\n      var siblingScoreThreshold = Math.max(10, topCandidate.readability.contentScore * 0.2);\n      // Keep potential top candidate's parent node to try to get text direction of it later.\n      parentOfTopCandidate = topCandidate.parentNode;\n      var siblings = parentOfTopCandidate.children;\n\n      for (var s = 0, sl = siblings.length; s < sl; s++) {\n        var sibling = siblings[s];\n        var append = false;\n\n        this.log(\"Looking at sibling node:\", sibling, sibling.readability ? (\"with score \" + sibling.readability.contentScore) : \"\");\n        this.log(\"Sibling has score\", sibling.readability ? sibling.readability.contentScore : \"Unknown\");\n\n        if (sibling === topCandidate) {\n          append = true;\n        } else {\n          var contentBonus = 0;\n\n          // Give a bonus if sibling nodes and top candidates have the example same classname\n          if (sibling.className === topCandidate.className && topCandidate.className !== \"\")\n            contentBonus += topCandidate.readability.contentScore * 0.2;\n\n          if (sibling.readability &&\n              ((sibling.readability.contentScore + contentBonus) >= siblingScoreThreshold)) {\n            append = true;\n          } else if (sibling.nodeName === \"P\") {\n            var linkDensity = this._getLinkDensity(sibling);\n            var nodeContent = this._getInnerText(sibling);\n            var nodeLength = nodeContent.length;\n\n            if (nodeLength > 80 && linkDensity < 0.25) {\n              append = true;\n            } else if (nodeLength < 80 && nodeLength > 0 && linkDensity === 0 &&\n                       nodeContent.search(/\\.( |$)/) !== -1) {\n              append = true;\n            }\n          }\n        }\n\n        if (append) {\n          this.log(\"Appending node:\", sibling);\n\n          if (this.ALTER_TO_DIV_EXCEPTIONS.indexOf(sibling.nodeName) === -1) {\n            // We have a node that isn't a common block level element, like a form or td tag.\n            // Turn it into a div so it doesn't get filtered out later by accident.\n            this.log(\"Altering sibling:\", sibling, \"to div.\");\n\n            sibling = this._setNodeTag(sibling, \"DIV\");\n          }\n\n          articleContent.appendChild(sibling);\n          // Fetch children again to make it compatible\n          // with DOM parsers without live collection support.\n          siblings = parentOfTopCandidate.children;\n          // siblings is a reference to the children array, and\n          // sibling is removed from the array when we call appendChild().\n          // As a result, we must revisit this index since the nodes\n          // have been shifted.\n          s -= 1;\n          sl -= 1;\n        }\n      }\n\n      if (this._debug)\n        this.log(\"Article content pre-prep: \" + articleContent.innerHTML);\n      // So we have all of the content that we need. Now we clean it up for presentation.\n      this._prepArticle(articleContent);\n      if (this._debug)\n        this.log(\"Article content post-prep: \" + articleContent.innerHTML);\n\n      if (neededToCreateTopCandidate) {\n        // We already created a fake div thing, and there wouldn't have been any siblings left\n        // for the previous loop, so there's no point trying to create a new div, and then\n        // move all the children over. Just assign IDs and class names here. No need to append\n        // because that already happened anyway.\n        topCandidate.id = \"readability-page-1\";\n        topCandidate.className = \"page\";\n      } else {\n        var div = doc.createElement(\"DIV\");\n        div.id = \"readability-page-1\";\n        div.className = \"page\";\n        while (articleContent.firstChild) {\n          div.appendChild(articleContent.firstChild);\n        }\n        articleContent.appendChild(div);\n      }\n\n      if (this._debug)\n        this.log(\"Article content after paging: \" + articleContent.innerHTML);\n\n      var parseSuccessful = true;\n\n      // Now that we've gone through the full algorithm, check to see if\n      // we got any meaningful content. If we didn't, we may need to re-run\n      // grabArticle with different flags set. This gives us a higher likelihood of\n      // finding the content, and the sieve approach gives us a higher likelihood of\n      // finding the -right- content.\n      var textLength = this._getInnerText(articleContent, true).length;\n      if (textLength < this._charThreshold) {\n        parseSuccessful = false;\n        page.innerHTML = pageCacheHtml;\n\n        if (this._flagIsActive(this.FLAG_STRIP_UNLIKELYS)) {\n          this._removeFlag(this.FLAG_STRIP_UNLIKELYS);\n          this._attempts.push({articleContent: articleContent, textLength: textLength});\n        } else if (this._flagIsActive(this.FLAG_WEIGHT_CLASSES)) {\n          this._removeFlag(this.FLAG_WEIGHT_CLASSES);\n          this._attempts.push({articleContent: articleContent, textLength: textLength});\n        } else if (this._flagIsActive(this.FLAG_CLEAN_CONDITIONALLY)) {\n          this._removeFlag(this.FLAG_CLEAN_CONDITIONALLY);\n          this._attempts.push({articleContent: articleContent, textLength: textLength});\n        } else {\n          this._attempts.push({articleContent: articleContent, textLength: textLength});\n          // No luck after removing flags, just return the longest text we found during the different loops\n          this._attempts.sort(function (a, b) {\n            return b.textLength - a.textLength;\n          });\n\n          // But first check if we actually have something\n          if (!this._attempts[0].textLength) {\n            return null;\n          }\n\n          articleContent = this._attempts[0].articleContent;\n          parseSuccessful = true;\n        }\n      }\n\n      if (parseSuccessful) {\n        // Find out text direction from ancestors of final top candidate.\n        var ancestors = [parentOfTopCandidate, topCandidate].concat(this._getNodeAncestors(parentOfTopCandidate));\n        this._someNode(ancestors, function(ancestor) {\n          if (!ancestor.tagName)\n            return false;\n          var articleDir = ancestor.getAttribute(\"dir\");\n          if (articleDir) {\n            this._articleDir = articleDir;\n            return true;\n          }\n          return false;\n        });\n        return articleContent;\n      }\n    }\n  },\n\n  /**\n   * Check whether the input string could be a byline.\n   * This verifies that the input is a string, and that the length\n   * is less than 100 chars.\n   *\n   * @param possibleByline {string} - a string to check whether its a byline.\n   * @return Boolean - whether the input string is a byline.\n   */\n  _isValidByline: function(byline) {\n    if (typeof byline == \"string\" || byline instanceof String) {\n      byline = byline.trim();\n      return (byline.length > 0) && (byline.length < 100);\n    }\n    return false;\n  },\n\n  /**\n   * Converts some of the common HTML entities in string to their corresponding characters.\n   *\n   * @param str {string} - a string to unescape.\n   * @return string without HTML entity.\n   */\n  _unescapeHtmlEntities: function(str) {\n    if (!str) {\n      return str;\n    }\n\n    var htmlEscapeMap = this.HTML_ESCAPE_MAP;\n    return str.replace(/&(quot|amp|apos|lt|gt);/g, function(_, tag) {\n      return htmlEscapeMap[tag];\n    }).replace(/&#(?:x([0-9a-z]{1,4})|([0-9]{1,4}));/gi, function(_, hex, numStr) {\n      var num = parseInt(hex || numStr, hex ? 16 : 10);\n      return String.fromCharCode(num);\n    });\n  },\n\n  /**\n   * Try to extract metadata from JSON-LD object.\n   * For now, only Schema.org objects of type Article or its subtypes are supported.\n   * @return Object with any metadata that could be extracted (possibly none)\n   */\n  _getJSONLD: function (doc) {\n    var scripts = this._getAllNodesWithTag(doc, [\"script\"]);\n\n    var metadata;\n\n    this._forEachNode(scripts, function(jsonLdElement) {\n      if (!metadata && jsonLdElement.getAttribute(\"type\") === \"application/ld+json\") {\n        try {\n          // Strip CDATA markers if present\n          var content = jsonLdElement.textContent.replace(/^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g, \"\");\n          var parsed = JSON.parse(content);\n          if (\n            !parsed[\"@context\"] ||\n            !parsed[\"@context\"].match(/^https?\\:\\/\\/schema\\.org$/)\n          ) {\n            return;\n          }\n\n          if (!parsed[\"@type\"] && Array.isArray(parsed[\"@graph\"])) {\n            parsed = parsed[\"@graph\"].find(function(it) {\n              return (it[\"@type\"] || \"\").match(\n                this.REGEXPS.jsonLdArticleTypes\n              );\n            });\n          }\n\n          if (\n            !parsed ||\n            !parsed[\"@type\"] ||\n            !parsed[\"@type\"].match(this.REGEXPS.jsonLdArticleTypes)\n          ) {\n            return;\n          }\n\n          metadata = {};\n\n          if (typeof parsed.name === \"string\" && typeof parsed.headline === \"string\" && parsed.name !== parsed.headline) {\n            // we have both name and headline element in the JSON-LD. They should both be the same but some websites like aktualne.cz\n            // put their own name into \"name\" and the article title to \"headline\" which confuses Readability. So we try to check if either\n            // \"name\" or \"headline\" closely matches the html title, and if so, use that one. If not, then we use \"name\" by default.\n\n            var title = this._getArticleTitle();\n            var nameMatches = this._textSimilarity(parsed.name, title) > 0.75;\n            var headlineMatches = this._textSimilarity(parsed.headline, title) > 0.75;\n\n            if (headlineMatches && !nameMatches) {\n              metadata.title = parsed.headline;\n            } else {\n              metadata.title = parsed.name;\n            }\n          } else if (typeof parsed.name === \"string\") {\n            metadata.title = parsed.name.trim();\n          } else if (typeof parsed.headline === \"string\") {\n            metadata.title = parsed.headline.trim();\n          }\n          if (parsed.author) {\n            if (typeof parsed.author.name === \"string\") {\n              metadata.byline = parsed.author.name.trim();\n            } else if (Array.isArray(parsed.author) && parsed.author[0] && typeof parsed.author[0].name === \"string\") {\n              metadata.byline = parsed.author\n                .filter(function(author) {\n                  return author && typeof author.name === \"string\";\n                })\n                .map(function(author) {\n                  return author.name.trim();\n                })\n                .join(\", \");\n            }\n          }\n          if (typeof parsed.description === \"string\") {\n            metadata.excerpt = parsed.description.trim();\n          }\n          if (\n            parsed.publisher &&\n            typeof parsed.publisher.name === \"string\"\n          ) {\n            metadata.siteName = parsed.publisher.name.trim();\n          }\n          return;\n        } catch (err) {\n          this.log(err.message);\n        }\n      }\n    });\n    return metadata ? metadata : {};\n  },\n\n  /**\n   * Attempts to get excerpt and byline metadata for the article.\n   *\n   * @param {Object} jsonld — object containing any metadata that\n   * could be extracted from JSON-LD object.\n   *\n   * @return Object with optional \"excerpt\" and \"byline\" properties\n   */\n  _getArticleMetadata: function(jsonld) {\n    var metadata = {};\n    var values = {};\n    var metaElements = this._doc.getElementsByTagName(\"meta\");\n\n    // property is a space-separated list of values\n    var propertyPattern = /\\s*(dc|dcterm|og|twitter)\\s*:\\s*(author|creator|description|title|site_name)\\s*/gi;\n\n    // name is a single value\n    var namePattern = /^\\s*(?:(dc|dcterm|og|twitter|weibo:(article|webpage))\\s*[\\.:]\\s*)?(author|creator|description|title|site_name)\\s*$/i;\n\n    // Find description tags.\n    this._forEachNode(metaElements, function(element) {\n      var elementName = element.getAttribute(\"name\");\n      var elementProperty = element.getAttribute(\"property\");\n      var content = element.getAttribute(\"content\");\n      if (!content) {\n        return;\n      }\n      var matches = null;\n      var name = null;\n\n      if (elementProperty) {\n        matches = elementProperty.match(propertyPattern);\n        if (matches) {\n          // Convert to lowercase, and remove any whitespace\n          // so we can match below.\n          name = matches[0].toLowerCase().replace(/\\s/g, \"\");\n          // multiple authors\n          values[name] = content.trim();\n        }\n      }\n      if (!matches && elementName && namePattern.test(elementName)) {\n        name = elementName;\n        if (content) {\n          // Convert to lowercase, remove any whitespace, and convert dots\n          // to colons so we can match below.\n          name = name.toLowerCase().replace(/\\s/g, \"\").replace(/\\./g, \":\");\n          values[name] = content.trim();\n        }\n      }\n    });\n\n    // get title\n    metadata.title = jsonld.title ||\n                     values[\"dc:title\"] ||\n                     values[\"dcterm:title\"] ||\n                     values[\"og:title\"] ||\n                     values[\"weibo:article:title\"] ||\n                     values[\"weibo:webpage:title\"] ||\n                     values[\"title\"] ||\n                     values[\"twitter:title\"];\n\n    if (!metadata.title) {\n      metadata.title = this._getArticleTitle();\n    }\n\n    // get author\n    metadata.byline = jsonld.byline ||\n                      values[\"dc:creator\"] ||\n                      values[\"dcterm:creator\"] ||\n                      values[\"author\"];\n\n    // get description\n    metadata.excerpt = jsonld.excerpt ||\n                       values[\"dc:description\"] ||\n                       values[\"dcterm:description\"] ||\n                       values[\"og:description\"] ||\n                       values[\"weibo:article:description\"] ||\n                       values[\"weibo:webpage:description\"] ||\n                       values[\"description\"] ||\n                       values[\"twitter:description\"];\n\n    // get site name\n    metadata.siteName = jsonld.siteName ||\n                        values[\"og:site_name\"];\n\n    // in many sites the meta value is escaped with HTML entities,\n    // so here we need to unescape it\n    metadata.title = this._unescapeHtmlEntities(metadata.title);\n    metadata.byline = this._unescapeHtmlEntities(metadata.byline);\n    metadata.excerpt = this._unescapeHtmlEntities(metadata.excerpt);\n    metadata.siteName = this._unescapeHtmlEntities(metadata.siteName);\n\n    return metadata;\n  },\n\n  /**\n   * Check if node is image, or if node contains exactly only one image\n   * whether as a direct child or as its descendants.\n   *\n   * @param Element\n  **/\n  _isSingleImage: function(node) {\n    if (node.tagName === \"IMG\") {\n      return true;\n    }\n\n    if (node.children.length !== 1 || node.textContent.trim() !== \"\") {\n      return false;\n    }\n\n    return this._isSingleImage(node.children[0]);\n  },\n\n  /**\n   * Find all <noscript> that are located after <img> nodes, and which contain only one\n   * <img> element. Replace the first image with the image from inside the <noscript> tag,\n   * and remove the <noscript> tag. This improves the quality of the images we use on\n   * some sites (e.g. Medium).\n   *\n   * @param Element\n  **/\n  _unwrapNoscriptImages: function(doc) {\n    // Find img without source or attributes that might contains image, and remove it.\n    // This is done to prevent a placeholder img is replaced by img from noscript in next step.\n    var imgs = Array.from(doc.getElementsByTagName(\"img\"));\n    this._forEachNode(imgs, function(img) {\n      for (var i = 0; i < img.attributes.length; i++) {\n        var attr = img.attributes[i];\n        switch (attr.name) {\n          case \"src\":\n          case \"srcset\":\n          case \"data-src\":\n          case \"data-srcset\":\n            return;\n        }\n\n        if (/\\.(jpg|jpeg|png|webp)/i.test(attr.value)) {\n          return;\n        }\n      }\n\n      img.parentNode.removeChild(img);\n    });\n\n    // Next find noscript and try to extract its image\n    var noscripts = Array.from(doc.getElementsByTagName(\"noscript\"));\n    this._forEachNode(noscripts, function(noscript) {\n      // Parse content of noscript and make sure it only contains image\n      var tmp = doc.createElement(\"div\");\n      tmp.innerHTML = noscript.innerHTML;\n      if (!this._isSingleImage(tmp)) {\n        return;\n      }\n\n      // If noscript has previous sibling and it only contains image,\n      // replace it with noscript content. However we also keep old\n      // attributes that might contains image.\n      var prevElement = noscript.previousElementSibling;\n      if (prevElement && this._isSingleImage(prevElement)) {\n        var prevImg = prevElement;\n        if (prevImg.tagName !== \"IMG\") {\n          prevImg = prevElement.getElementsByTagName(\"img\")[0];\n        }\n\n        var newImg = tmp.getElementsByTagName(\"img\")[0];\n        for (var i = 0; i < prevImg.attributes.length; i++) {\n          var attr = prevImg.attributes[i];\n          if (attr.value === \"\") {\n            continue;\n          }\n\n          if (attr.name === \"src\" || attr.name === \"srcset\" || /\\.(jpg|jpeg|png|webp)/i.test(attr.value)) {\n            if (newImg.getAttribute(attr.name) === attr.value) {\n              continue;\n            }\n\n            var attrName = attr.name;\n            if (newImg.hasAttribute(attrName)) {\n              attrName = \"data-old-\" + attrName;\n            }\n\n            newImg.setAttribute(attrName, attr.value);\n          }\n        }\n\n        noscript.parentNode.replaceChild(tmp.firstElementChild, prevElement);\n      }\n    });\n  },\n\n  /**\n   * Removes script tags from the document.\n   *\n   * @param Element\n  **/\n  _removeScripts: function(doc) {\n    this._removeNodes(this._getAllNodesWithTag(doc, [\"script\"]), function(scriptNode) {\n      scriptNode.nodeValue = \"\";\n      scriptNode.removeAttribute(\"src\");\n      return true;\n    });\n    this._removeNodes(this._getAllNodesWithTag(doc, [\"noscript\"]));\n  },\n\n  /**\n   * Check if this node has only whitespace and a single element with given tag\n   * Returns false if the DIV node contains non-empty text nodes\n   * or if it contains no element with given tag or more than 1 element.\n   *\n   * @param Element\n   * @param string tag of child element\n  **/\n  _hasSingleTagInsideElement: function(element, tag) {\n    // There should be exactly 1 element child with given tag\n    if (element.children.length != 1 || element.children[0].tagName !== tag) {\n      return false;\n    }\n\n    // And there should be no text nodes with real content\n    return !this._someNode(element.childNodes, function(node) {\n      return node.nodeType === this.TEXT_NODE &&\n             this.REGEXPS.hasContent.test(node.textContent);\n    });\n  },\n\n  _isElementWithoutContent: function(node) {\n    return node.nodeType === this.ELEMENT_NODE &&\n      node.textContent.trim().length == 0 &&\n      (node.children.length == 0 ||\n       node.children.length == node.getElementsByTagName(\"br\").length + node.getElementsByTagName(\"hr\").length);\n  },\n\n  /**\n   * Determine whether element has any children block level elements.\n   *\n   * @param Element\n   */\n  _hasChildBlockElement: function (element) {\n    return this._someNode(element.childNodes, function(node) {\n      return this.DIV_TO_P_ELEMS.has(node.tagName) ||\n             this._hasChildBlockElement(node);\n    });\n  },\n\n  /***\n   * Determine if a node qualifies as phrasing content.\n   * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Phrasing_content\n  **/\n  _isPhrasingContent: function(node) {\n    return node.nodeType === this.TEXT_NODE || this.PHRASING_ELEMS.indexOf(node.tagName) !== -1 ||\n      ((node.tagName === \"A\" || node.tagName === \"DEL\" || node.tagName === \"INS\") &&\n        this._everyNode(node.childNodes, this._isPhrasingContent));\n  },\n\n  _isWhitespace: function(node) {\n    return (node.nodeType === this.TEXT_NODE && node.textContent.trim().length === 0) ||\n           (node.nodeType === this.ELEMENT_NODE && node.tagName === \"BR\");\n  },\n\n  /**\n   * Get the inner text of a node - cross browser compatibly.\n   * This also strips out any excess whitespace to be found.\n   *\n   * @param Element\n   * @param Boolean normalizeSpaces (default: true)\n   * @return string\n  **/\n  _getInnerText: function(e, normalizeSpaces) {\n    normalizeSpaces = (typeof normalizeSpaces === \"undefined\") ? true : normalizeSpaces;\n    var textContent = e.textContent.trim();\n\n    if (normalizeSpaces) {\n      return textContent.replace(this.REGEXPS.normalize, \" \");\n    }\n    return textContent;\n  },\n\n  /**\n   * Get the number of times a string s appears in the node e.\n   *\n   * @param Element\n   * @param string - what to split on. Default is \",\"\n   * @return number (integer)\n  **/\n  _getCharCount: function(e, s) {\n    s = s || \",\";\n    return this._getInnerText(e).split(s).length - 1;\n  },\n\n  /**\n   * Remove the style attribute on every e and under.\n   * TODO: Test if getElementsByTagName(*) is faster.\n   *\n   * @param Element\n   * @return void\n  **/\n  _cleanStyles: function(e) {\n    if (!e || e.tagName.toLowerCase() === \"svg\")\n      return;\n\n    // Remove `style` and deprecated presentational attributes\n    for (var i = 0; i < this.PRESENTATIONAL_ATTRIBUTES.length; i++) {\n      e.removeAttribute(this.PRESENTATIONAL_ATTRIBUTES[i]);\n    }\n\n    if (this.DEPRECATED_SIZE_ATTRIBUTE_ELEMS.indexOf(e.tagName) !== -1) {\n      e.removeAttribute(\"width\");\n      e.removeAttribute(\"height\");\n    }\n\n    var cur = e.firstElementChild;\n    while (cur !== null) {\n      this._cleanStyles(cur);\n      cur = cur.nextElementSibling;\n    }\n  },\n\n  /**\n   * Get the density of links as a percentage of the content\n   * This is the amount of text that is inside a link divided by the total text in the node.\n   *\n   * @param Element\n   * @return number (float)\n  **/\n  _getLinkDensity: function(element) {\n    var textLength = this._getInnerText(element).length;\n    if (textLength === 0)\n      return 0;\n\n    var linkLength = 0;\n\n    // XXX implement _reduceNodeList?\n    this._forEachNode(element.getElementsByTagName(\"a\"), function(linkNode) {\n      var href = linkNode.getAttribute(\"href\");\n      var coefficient = href && this.REGEXPS.hashUrl.test(href) ? 0.3 : 1;\n      linkLength += this._getInnerText(linkNode).length * coefficient;\n    });\n\n    return linkLength / textLength;\n  },\n\n  /**\n   * Get an elements class/id weight. Uses regular expressions to tell if this\n   * element looks good or bad.\n   *\n   * @param Element\n   * @return number (Integer)\n  **/\n  _getClassWeight: function(e) {\n    if (!this._flagIsActive(this.FLAG_WEIGHT_CLASSES))\n      return 0;\n\n    var weight = 0;\n\n    // Look for a special classname\n    if (typeof(e.className) === \"string\" && e.className !== \"\") {\n      if (this.REGEXPS.negative.test(e.className))\n        weight -= 25;\n\n      if (this.REGEXPS.positive.test(e.className))\n        weight += 25;\n    }\n\n    // Look for a special ID\n    if (typeof(e.id) === \"string\" && e.id !== \"\") {\n      if (this.REGEXPS.negative.test(e.id))\n        weight -= 25;\n\n      if (this.REGEXPS.positive.test(e.id))\n        weight += 25;\n    }\n\n    return weight;\n  },\n\n  /**\n   * Clean a node of all elements of type \"tag\".\n   * (Unless it's a youtube/vimeo video. People love movies.)\n   *\n   * @param Element\n   * @param string tag to clean\n   * @return void\n   **/\n  _clean: function(e, tag) {\n    var isEmbed = [\"object\", \"embed\", \"iframe\"].indexOf(tag) !== -1;\n\n    this._removeNodes(this._getAllNodesWithTag(e, [tag]), function(element) {\n      // Allow youtube and vimeo videos through as people usually want to see those.\n      if (isEmbed) {\n        // First, check the elements attributes to see if any of them contain youtube or vimeo\n        for (var i = 0; i < element.attributes.length; i++) {\n          if (this.REGEXPS.videos.test(element.attributes[i].value)) {\n            return false;\n          }\n        }\n\n        // For embed with <object> tag, check inner HTML as well.\n        if (element.tagName === \"object\" && this.REGEXPS.videos.test(element.innerHTML)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  },\n\n  /**\n   * Check if a given node has one of its ancestor tag name matching the\n   * provided one.\n   * @param  HTMLElement node\n   * @param  String      tagName\n   * @param  Number      maxDepth\n   * @param  Function    filterFn a filter to invoke to determine whether this node 'counts'\n   * @return Boolean\n   */\n  _hasAncestorTag: function(node, tagName, maxDepth, filterFn) {\n    maxDepth = maxDepth || 3;\n    tagName = tagName.toUpperCase();\n    var depth = 0;\n    while (node.parentNode) {\n      if (maxDepth > 0 && depth > maxDepth)\n        return false;\n      if (node.parentNode.tagName === tagName && (!filterFn || filterFn(node.parentNode)))\n        return true;\n      node = node.parentNode;\n      depth++;\n    }\n    return false;\n  },\n\n  /**\n   * Return an object indicating how many rows and columns this table has.\n   */\n  _getRowAndColumnCount: function(table) {\n    var rows = 0;\n    var columns = 0;\n    var trs = table.getElementsByTagName(\"tr\");\n    for (var i = 0; i < trs.length; i++) {\n      var rowspan = trs[i].getAttribute(\"rowspan\") || 0;\n      if (rowspan) {\n        rowspan = parseInt(rowspan, 10);\n      }\n      rows += (rowspan || 1);\n\n      // Now look for column-related info\n      var columnsInThisRow = 0;\n      var cells = trs[i].getElementsByTagName(\"td\");\n      for (var j = 0; j < cells.length; j++) {\n        var colspan = cells[j].getAttribute(\"colspan\") || 0;\n        if (colspan) {\n          colspan = parseInt(colspan, 10);\n        }\n        columnsInThisRow += (colspan || 1);\n      }\n      columns = Math.max(columns, columnsInThisRow);\n    }\n    return {rows: rows, columns: columns};\n  },\n\n  /**\n   * Look for 'data' (as opposed to 'layout') tables, for which we use\n   * similar checks as\n   * https://searchfox.org/mozilla-central/rev/f82d5c549f046cb64ce5602bfd894b7ae807c8f8/accessible/generic/TableAccessible.cpp#19\n   */\n  _markDataTables: function(root) {\n    var tables = root.getElementsByTagName(\"table\");\n    for (var i = 0; i < tables.length; i++) {\n      var table = tables[i];\n      var role = table.getAttribute(\"role\");\n      if (role == \"presentation\") {\n        table._readabilityDataTable = false;\n        continue;\n      }\n      var datatable = table.getAttribute(\"datatable\");\n      if (datatable == \"0\") {\n        table._readabilityDataTable = false;\n        continue;\n      }\n      var summary = table.getAttribute(\"summary\");\n      if (summary) {\n        table._readabilityDataTable = true;\n        continue;\n      }\n\n      var caption = table.getElementsByTagName(\"caption\")[0];\n      if (caption && caption.childNodes.length > 0) {\n        table._readabilityDataTable = true;\n        continue;\n      }\n\n      // If the table has a descendant with any of these tags, consider a data table:\n      var dataTableDescendants = [\"col\", \"colgroup\", \"tfoot\", \"thead\", \"th\"];\n      var descendantExists = function(tag) {\n        return !!table.getElementsByTagName(tag)[0];\n      };\n      if (dataTableDescendants.some(descendantExists)) {\n        this.log(\"Data table because found data-y descendant\");\n        table._readabilityDataTable = true;\n        continue;\n      }\n\n      // Nested tables indicate a layout table:\n      if (table.getElementsByTagName(\"table\")[0]) {\n        table._readabilityDataTable = false;\n        continue;\n      }\n\n      var sizeInfo = this._getRowAndColumnCount(table);\n      if (sizeInfo.rows >= 10 || sizeInfo.columns > 4) {\n        table._readabilityDataTable = true;\n        continue;\n      }\n      // Now just go by size entirely:\n      table._readabilityDataTable = sizeInfo.rows * sizeInfo.columns > 10;\n    }\n  },\n\n  /* convert images and figures that have properties like data-src into images that can be loaded without JS */\n  _fixLazyImages: function (root) {\n    this._forEachNode(this._getAllNodesWithTag(root, [\"img\", \"picture\", \"figure\"]), function (elem) {\n      // In some sites (e.g. Kotaku), they put 1px square image as base64 data uri in the src attribute.\n      // So, here we check if the data uri is too short, just might as well remove it.\n      if (elem.src && this.REGEXPS.b64DataUrl.test(elem.src)) {\n        // Make sure it's not SVG, because SVG can have a meaningful image in under 133 bytes.\n        var parts = this.REGEXPS.b64DataUrl.exec(elem.src);\n        if (parts[1] === \"image/svg+xml\") {\n          return;\n        }\n\n        // Make sure this element has other attributes which contains image.\n        // If it doesn't, then this src is important and shouldn't be removed.\n        var srcCouldBeRemoved = false;\n        for (var i = 0; i < elem.attributes.length; i++) {\n          var attr = elem.attributes[i];\n          if (attr.name === \"src\") {\n            continue;\n          }\n\n          if (/\\.(jpg|jpeg|png|webp)/i.test(attr.value)) {\n            srcCouldBeRemoved = true;\n            break;\n          }\n        }\n\n        // Here we assume if image is less than 100 bytes (or 133B after encoded to base64)\n        // it will be too small, therefore it might be placeholder image.\n        if (srcCouldBeRemoved) {\n          var b64starts = elem.src.search(/base64\\s*/i) + 7;\n          var b64length = elem.src.length - b64starts;\n          if (b64length < 133) {\n            elem.removeAttribute(\"src\");\n          }\n        }\n      }\n\n      // also check for \"null\" to work around https://github.com/jsdom/jsdom/issues/2580\n      if ((elem.src || (elem.srcset && elem.srcset != \"null\")) && elem.className.toLowerCase().indexOf(\"lazy\") === -1) {\n        return;\n      }\n\n      for (var j = 0; j < elem.attributes.length; j++) {\n        attr = elem.attributes[j];\n        if (attr.name === \"src\" || attr.name === \"srcset\" || attr.name === \"alt\") {\n          continue;\n        }\n        var copyTo = null;\n        if (/\\.(jpg|jpeg|png|webp)\\s+\\d/.test(attr.value)) {\n          copyTo = \"srcset\";\n        } else if (/^\\s*\\S+\\.(jpg|jpeg|png|webp)\\S*\\s*$/.test(attr.value)) {\n          copyTo = \"src\";\n        }\n        if (copyTo) {\n          //if this is an img or picture, set the attribute directly\n          if (elem.tagName === \"IMG\" || elem.tagName === \"PICTURE\") {\n            elem.setAttribute(copyTo, attr.value);\n          } else if (elem.tagName === \"FIGURE\" && !this._getAllNodesWithTag(elem, [\"img\", \"picture\"]).length) {\n            //if the item is a <figure> that does not contain an image or picture, create one and place it inside the figure\n            //see the nytimes-3 testcase for an example\n            var img = this._doc.createElement(\"img\");\n            img.setAttribute(copyTo, attr.value);\n            elem.appendChild(img);\n          }\n        }\n      }\n    });\n  },\n\n  _getTextDensity: function(e, tags) {\n    var textLength = this._getInnerText(e, true).length;\n    if (textLength === 0) {\n      return 0;\n    }\n    var childrenLength = 0;\n    var children = this._getAllNodesWithTag(e, tags);\n    this._forEachNode(children, (child) => childrenLength += this._getInnerText(child, true).length);\n    return childrenLength / textLength;\n  },\n\n  /**\n   * Clean an element of all tags of type \"tag\" if they look fishy.\n   * \"Fishy\" is an algorithm based on content length, classnames, link density, number of images & embeds, etc.\n   *\n   * @return void\n   **/\n  _cleanConditionally: function(e, tag) {\n    if (!this._flagIsActive(this.FLAG_CLEAN_CONDITIONALLY))\n      return;\n\n    // Gather counts for other typical elements embedded within.\n    // Traverse backwards so we can remove nodes at the same time\n    // without effecting the traversal.\n    //\n    // TODO: Consider taking into account original contentScore here.\n    this._removeNodes(this._getAllNodesWithTag(e, [tag]), function(node) {\n      // First check if this node IS data table, in which case don't remove it.\n      var isDataTable = function(t) {\n        return t._readabilityDataTable;\n      };\n\n      var isList = tag === \"ul\" || tag === \"ol\";\n      if (!isList) {\n        var listLength = 0;\n        var listNodes = this._getAllNodesWithTag(node, [\"ul\", \"ol\"]);\n        this._forEachNode(listNodes, (list) => listLength += this._getInnerText(list).length);\n        isList = listLength / this._getInnerText(node).length > 0.9;\n      }\n\n      if (tag === \"table\" && isDataTable(node)) {\n        return false;\n      }\n\n      // Next check if we're inside a data table, in which case don't remove it as well.\n      if (this._hasAncestorTag(node, \"table\", -1, isDataTable)) {\n        return false;\n      }\n\n      if (this._hasAncestorTag(node, \"code\")) {\n        return false;\n      }\n\n      var weight = this._getClassWeight(node);\n\n      this.log(\"Cleaning Conditionally\", node);\n\n      var contentScore = 0;\n\n      if (weight + contentScore < 0) {\n        return true;\n      }\n\n      if (this._getCharCount(node, \",\") < 10) {\n        // If there are not very many commas, and the number of\n        // non-paragraph elements is more than paragraphs or other\n        // ominous signs, remove the element.\n        var p = node.getElementsByTagName(\"p\").length;\n        var img = node.getElementsByTagName(\"img\").length;\n        var li = node.getElementsByTagName(\"li\").length - 100;\n        var input = node.getElementsByTagName(\"input\").length;\n        var headingDensity = this._getTextDensity(node, [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]);\n\n        var embedCount = 0;\n        var embeds = this._getAllNodesWithTag(node, [\"object\", \"embed\", \"iframe\"]);\n\n        for (var i = 0; i < embeds.length; i++) {\n          // If this embed has attribute that matches video regex, don't delete it.\n          for (var j = 0; j < embeds[i].attributes.length; j++) {\n            if (this.REGEXPS.videos.test(embeds[i].attributes[j].value)) {\n              return false;\n            }\n          }\n\n          // For embed with <object> tag, check inner HTML as well.\n          if (embeds[i].tagName === \"object\" && this.REGEXPS.videos.test(embeds[i].innerHTML)) {\n            return false;\n          }\n\n          embedCount++;\n        }\n\n        var linkDensity = this._getLinkDensity(node);\n        var contentLength = this._getInnerText(node).length;\n\n        var haveToRemove =\n          (img > 1 && p / img < 0.5 && !this._hasAncestorTag(node, \"figure\")) ||\n          (!isList && li > p) ||\n          (input > Math.floor(p/3)) ||\n          (!isList && headingDensity < 0.9 && contentLength < 25 && (img === 0 || img > 2) && !this._hasAncestorTag(node, \"figure\")) ||\n          (!isList && weight < 25 && linkDensity > 0.2) ||\n          (weight >= 25 && linkDensity > 0.5) ||\n          ((embedCount === 1 && contentLength < 75) || embedCount > 1);\n        return haveToRemove;\n      }\n      return false;\n    });\n  },\n\n  /**\n   * Clean out elements that match the specified conditions\n   *\n   * @param Element\n   * @param Function determines whether a node should be removed\n   * @return void\n   **/\n  _cleanMatchedNodes: function(e, filter) {\n    var endOfSearchMarkerNode = this._getNextNode(e, true);\n    var next = this._getNextNode(e);\n    while (next && next != endOfSearchMarkerNode) {\n      if (filter.call(this, next, next.className + \" \" + next.id)) {\n        next = this._removeAndGetNext(next);\n      } else {\n        next = this._getNextNode(next);\n      }\n    }\n  },\n\n  /**\n   * Clean out spurious headers from an Element.\n   *\n   * @param Element\n   * @return void\n  **/\n  _cleanHeaders: function(e) {\n    let headingNodes = this._getAllNodesWithTag(e, [\"h1\", \"h2\"]);\n    this._removeNodes(headingNodes, function(node) {\n      let shouldRemove = this._getClassWeight(node) < 0;\n      if (shouldRemove) {\n        this.log(\"Removing header with low class weight:\", node);\n      }\n      return shouldRemove;\n    });\n  },\n\n  /**\n   * Check if this node is an H1 or H2 element whose content is mostly\n   * the same as the article title.\n   *\n   * @param Element  the node to check.\n   * @return boolean indicating whether this is a title-like header.\n   */\n  _headerDuplicatesTitle: function(node) {\n    if (node.tagName != \"H1\" && node.tagName != \"H2\") {\n      return false;\n    }\n    var heading = this._getInnerText(node, false);\n    this.log(\"Evaluating similarity of header:\", heading, this._articleTitle);\n    return this._textSimilarity(this._articleTitle, heading) > 0.75;\n  },\n\n  _flagIsActive: function(flag) {\n    return (this._flags & flag) > 0;\n  },\n\n  _removeFlag: function(flag) {\n    this._flags = this._flags & ~flag;\n  },\n\n  _isProbablyVisible: function(node) {\n    // Have to null-check node.style and node.className.indexOf to deal with SVG and MathML nodes.\n    return (!node.style || node.style.display != \"none\")\n      && !node.hasAttribute(\"hidden\")\n      //check for \"fallback-image\" so that wikimedia math images are displayed\n      && (!node.hasAttribute(\"aria-hidden\") || node.getAttribute(\"aria-hidden\") != \"true\" || (node.className && node.className.indexOf && node.className.indexOf(\"fallback-image\") !== -1));\n  },\n\n  /**\n   * Runs readability.\n   *\n   * Workflow:\n   *  1. Prep the document by removing script tags, css, etc.\n   *  2. Build readability's DOM tree.\n   *  3. Grab the article content from the current dom tree.\n   *  4. Replace the current DOM tree with the new one.\n   *  5. Read peacefully.\n   *\n   * @return void\n   **/\n  parse: function () {\n    // Avoid parsing too large documents, as per configuration option\n    if (this._maxElemsToParse > 0) {\n      var numTags = this._doc.getElementsByTagName(\"*\").length;\n      if (numTags > this._maxElemsToParse) {\n        throw new Error(\"Aborting parsing document; \" + numTags + \" elements found\");\n      }\n    }\n\n    // Unwrap image from noscript\n    this._unwrapNoscriptImages(this._doc);\n\n    // Extract JSON-LD metadata before removing scripts\n    var jsonLd = this._disableJSONLD ? {} : this._getJSONLD(this._doc);\n\n    // Remove script tags from the document.\n    this._removeScripts(this._doc);\n\n    this._prepDocument();\n\n    var metadata = this._getArticleMetadata(jsonLd);\n    this._articleTitle = metadata.title;\n\n    var articleContent = this._grabArticle();\n    if (!articleContent)\n      return null;\n\n    this.log(\"Grabbed: \" + articleContent.innerHTML);\n\n    this._postProcessContent(articleContent);\n\n    // If we haven't found an excerpt in the article's metadata, use the article's\n    // first paragraph as the excerpt. This is used for displaying a preview of\n    // the article's content.\n    if (!metadata.excerpt) {\n      var paragraphs = articleContent.getElementsByTagName(\"p\");\n      if (paragraphs.length > 0) {\n        metadata.excerpt = paragraphs[0].textContent.trim();\n      }\n    }\n\n    var textContent = articleContent.textContent;\n    return {\n      title: this._articleTitle,\n      byline: metadata.byline || this._articleByline,\n      dir: this._articleDir,\n      lang: this._articleLang,\n      content: this._serializer(articleContent),\n      textContent: textContent,\n      length: textContent.length,\n      excerpt: metadata.excerpt,\n      siteName: metadata.siteName || this._articleSiteName\n    };\n  }\n};\n\nif (typeof module === \"object\") {\n  module.exports = Readability;\n}\n","var Readability = require(\"./Readability\");\nvar isProbablyReaderable = require(\"./Readability-readerable\");\n\nmodule.exports = {\n  Readability: Readability,\n  isProbablyReaderable: isProbablyReaderable\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('tudor/read-mode', () => {\n  console.log('[tudor/read-mode] Hello, forum and admin!');\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LoadingPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/SplitDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/PostControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/PostUser'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/PostMeta'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/PostEdited'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Separator'];","import Modal from \"flarum/components/Modal\";\nimport ItemList from 'flarum/utils/ItemList';\nimport PostLoading from 'flarum/components/LoadingPost';\nimport SplitDropdown from 'flarum/common/components/SplitDropdown';\nimport Button from 'flarum/common/components/Button';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport listItems from 'flarum/common/helpers/listItems';\nimport PostControls from 'flarum/utils/PostControls';\nimport PostUser from 'flarum/components/PostUser';\nimport PostMeta from 'flarum/components/PostMeta';\nimport PostEdited from 'flarum/components/PostEdited';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Separator from 'flarum/common/components/Separator';\n\nexport default class ArticleModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.discussion = this.attrs.discussion;\n\n    this.includedPosts = [];\n\n    this.firstPostControls = [];\n\n    this.headerItemsFirstComment = '';\n\n    \n\n    // app.history.push('discussion');\n    // console.log(app);\n    // console.log(this);\n    var docElm = document.documentElement;\n    if (docElm.requestFullscreen) {\n      docElm.requestFullscreen();\n    } else if (docElm.msRequestFullscreen) {\n      docElm.msRequestFullscreen();\n    } else if (docElm.mozRequestFullScreen) {\n      docElm.mozRequestFullScreen();\n    } else if (docElm.webkitRequestFullScreen) {\n      docElm.webkitRequestFullScreen();\n    }\n  }\n\n  className() {\n    return \"ReadModeModal Modal--full\";\n  }\n\n  title() {\n    return \"\";\n    // return this.discussion.title();\n  }\n\n  content() {\n\n    const params = this.requestParams();\n    app.store.find('discussions', this.discussion.id(), params)\n      .then((discussion) => {\n        // console.log(discussion);\n        if (discussion.payload && discussion.payload.included) {\n          let includedPosts = [];\n          const discussionId = discussion.id();\n    \n          includedPosts = discussion.payload.included\n            .filter(\n              (record) =>\n                record.type === 'posts' &&\n                record.relationships &&\n                record.relationships.discussion &&\n                record.relationships.discussion.data.id === discussionId\n            )\n            .map((record) => app.store.getById('posts', record.id))\n            .sort((a, b) => a.createdAt() - b.createdAt())\n            .slice(0, 20);\n\n          // return includedPosts;\n          this.setPosts(includedPosts);\n        }\n      });\n      \n    let lastTime;\n    const postIds = this.discussion.postIds();\n\n    const items = this.includedPosts.map((post, i) => {\n      let content;\n      const attrs = { 'data-index': i };\n\n      // console.log(attrs);\n      if (post) {\n        const time = post.createdAt();\n        const PostComponent = app.postComponents[post.contentType()];\n        content = PostComponent ? PostComponent.component({ post }) : '';\n        \n        if (post.number() == 1) {\n          this.firstPostControls = PostControls.controls(post, this).toArray();\n          const items = new ItemList();\n          \n\n          items.add(\n            'meta',\n            PostMeta.component({ post }),\n          );\n\n          if (post.isEdited() && !post.isHidden()) {\n            items.add('edited', PostEdited.component({ post }));\n          }\n\n          this.headerItemsFirstComment = items.toArray();\n          // console.log(content.dom);\n          // m.redraw();\n        }\n\n        attrs.key = 'post' + post.id();\n        attrs['data-time'] = time.toISOString();\n        attrs['data-number'] = post.number();\n        attrs['data-id'] = post.id();\n        attrs['data-type'] = post.contentType();\n\n        // If the post before this one was more than 4 days ago, we will\n        // display a 'time gap' indicating how long it has been in between\n        // the posts.\n        const dt = time - lastTime;\n\n        if (dt > 1000 * 60 * 60 * 24 * 4) {\n          content = [\n            <div className=\"PostStream-timeGap\">\n              <span>{app.translator.trans('core.forum.post_stream.time_lapsed_text', { period: dayjs().add(dt, 'ms').fromNow(true) })}</span>\n            </div>,\n            content,\n          ];\n        }\n\n        lastTime = time;\n      } else {\n        attrs.key = 'post' + postIds[i];\n\n        content = PostLoading.component();\n      }\n\n      return (\n        <div className=\"ReadModePostStream-item \" {...attrs}>\n          {content}\n        </div>\n      );\n    });\n\n    // console.log(items);\n    // console.log(this.headerItemsFirstComment);\n\n    return [\n      items.length !== 0 ? [\n        <div className=\"DiscussionPage-stream ReadMode\">\n          <div className=\"Modal-header ArticleTitle\">\n            <h3 className=\"App-titleControl App-titleControl--text\">{this.discussion.title()}</h3>\n          </div>\n            <div className=\"PostStream\">{items[0]}</div>\n        </div>\n      ] : (\n        <LoadingIndicator size='large' />\n      )\n    ]\n  }\n\n  setPosts(posts) {\n    // console.log(posts);\n    this.includedPosts = posts;\n    m.redraw();\n  }\n\n  /**\n   * Get the parameters that should be passed in the API request to get the\n   * discussion.\n   *\n   * @return {Object}\n   */\n   requestParams() {\n    return {\n      bySlug: true,\n      page: { near: this.near },\n    };\n  }\n\n  /**\n   * Build an item list for the contents of the sidebar.\n   *\n   * @return {ItemList}\n   */\n   articleItems() {\n    const items = new ItemList();\n\n    return items;\n  }\n\n  /**\n   * Build an item list for the contents of the sidebar.\n   *\n   * @return {ItemList}\n   */\n   commentItems() {\n    const items = new ItemList();\n    return items;\n  }\n\n  hide(){\n    if (document.fullscreenElement) {\n        document.exitFullscreen()\n          .then(() => console.log(\"Document Exited from Full screen mode\"))\n          .catch((err) => console.error(err))\n      } else {\n        document.documentElement.requestFullscreen();\n      }\n    this.attrs.state.close();\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport Button from 'flarum/common/components/Button';\nimport Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\n\n// import ReadModeModal from './components/ReadModeModal';\nimport ArticleModal from './components/ArticleModal';\nimport { getBrowser } from './utils/getBrowser';\nimport { isProbablyReaderable, Readability } from '@mozilla/readability'\n\napp.initializers.add('tudor/read-mode', () => {\n\n  // Discussion.prototype.shareUrl = Model.attribute('shareUrl');\n  extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n    const browser = getBrowser();\n\n    console.log(browser);\n    // fnBrowserDetect();\n\n    const handleBrowser = () => {\n      if (browser === 'firefox') {\n        if (isProbablyReaderable(document)) {\n          const documentClone = document.cloneNode(true);\n          const article = new Readability(documentClone).parse();\n          // TODO\n          app.modal.show(ArticleModal, { discussion: this.discussion });\n        }\n      }\n      if (browser === 'edge') {\n        const baseUrl = app.forum.attribute('baseUrl');\n        const read_url = `read://https_${baseUrl}?url=${this.discussion.shareUrl()}`;\n        window.open(read_url, \"_blank\");\n        // console.log(read_url);\n      }\n      else {\n        app.modal.show(ArticleModal, { discussion: this.discussion });\n      }\n\n\n    }\n\n    items.add('read-mode',\n      <Button\n        class=\"Button Button-icon Button--read-mode\"\n        icon=\"fas fa-book-reader\"\n        onclick={() => handleBrowser()}\n      >\n        {app.translator.trans('read-mode.forum.discussion.read_mode_button')}\n      </Button>,\n      -1\n    );\n  });\n\n});\n","export function getBrowser() {\n  let userAgent = navigator.userAgent;\n  let browserName;\n\n  if (userAgent.match(/chrome|chromium|crios/i)) {\n    browserName = 'chrome';\n    if (userAgent.indexOf(\"Edg\") > -1){\n      browserName = 'edge';\n    }\n  } else if (userAgent.match(/firefox|fxios/i)) {\n    browserName = 'firefox';\n  } else if (userAgent.match(/safari/i)) {\n    browserName = 'safari';\n  } else if (userAgent.match(/opr\\//i)) {\n    browserName = 'opera';\n  } else if (userAgent.match(/edg/i)) {\n    browserName = 'edge';\n  } else {\n    browserName = 'No browser detection';\n  }\n\n  return browserName;\n}\n"],"names":["REGEXPS","unlikelyCandidates","okMaybeItsACandidate","isNodeVisible","node","style","display","hasAttribute","getAttribute","className","indexOf","module","exports","doc","options","visibilityChecker","defaultOptions","minScore","minContentLength","Object","assign","nodes","querySelectorAll","brNodes","length","set","Set","forEach","call","add","parentNode","Array","from","score","some","matchString","id","test","matches","textContentLength","textContent","trim","Math","sqrt","Readability","documentElement","arguments","Error","this","_doc","_docJSDOMParser","firstChild","__JSDOMParser__","_articleTitle","_articleByline","_articleDir","_articleSiteName","_attempts","_debug","debug","_maxElemsToParse","maxElemsToParse","DEFAULT_MAX_ELEMS_TO_PARSE","_nbTopCandidates","nbTopCandidates","DEFAULT_N_TOP_CANDIDATES","_charThreshold","charThreshold","DEFAULT_CHAR_THRESHOLD","_classesToPreserve","CLASSES_TO_PRESERVE","concat","classesToPreserve","_keepClasses","keepClasses","_serializer","serializer","el","innerHTML","_disableJSONLD","disableJSONLD","_flags","FLAG_STRIP_UNLIKELYS","FLAG_WEIGHT_CLASSES","FLAG_CLEAN_CONDITIONALLY","logNode","nodeType","TEXT_NODE","nodeName","attrPairs","attributes","attr","name","value","join","localName","log","dump","msg","prototype","map","x","console","args","arg","ELEMENT_NODE","unshift","apply","DEFAULT_TAGS_TO_SCORE","toUpperCase","split","positive","negative","extraneous","byline","replaceFonts","normalize","videos","shareElements","nextLink","prevLink","tokenize","whitespace","hasContent","hashUrl","srcsetUrl","b64DataUrl","jsonLdArticleTypes","UNLIKELY_ROLES","DIV_TO_P_ELEMS","ALTER_TO_DIV_EXCEPTIONS","PRESENTATIONAL_ATTRIBUTES","DEPRECATED_SIZE_ATTRIBUTE_ELEMS","PHRASING_ELEMS","HTML_ESCAPE_MAP","_postProcessContent","articleContent","_fixRelativeUris","_simplifyNestedElements","_cleanClasses","_removeNodes","nodeList","filterFn","_isLiveNodeList","i","removeChild","_replaceNodeTags","newTagName","_setNodeTag","_forEachNode","fn","_findNode","find","_someNode","_everyNode","every","_concatNodeLists","slice","nodeLists","list","_getAllNodesWithTag","tagNames","tag","collection","getElementsByTagName","isArray","filter","cls","setAttribute","removeAttribute","firstElementChild","nextElementSibling","baseURI","documentURI","toAbsoluteURI","uri","charAt","URL","href","ex","links","link","childNodes","text","createTextNode","replaceChild","container","createElement","appendChild","medias","media","src","poster","srcset","newSrcset","replace","_","p1","p2","p3","includes","tagName","startsWith","_isElementWithoutContent","_removeAndGetNext","_hasSingleTagInsideElement","child","children","_getNextNode","_getArticleTitle","curTitle","origTitle","title","_getInnerText","e","titleHadHierarchicalSeparators","wordCount","str","headings","trimmedTitle","heading","substring","lastIndexOf","substr","hOnes","curTitleWordCount","_prepDocument","body","_replaceBrs","_nextNode","next","nextSibling","elem","br","replaced","brSibling","p","nextElem","_isPhrasingContent","sibling","lastChild","_isWhitespace","toLowerCase","replacement","ownerDocument","readability","_prepArticle","_cleanStyles","_markDataTables","_fixLazyImages","_cleanConditionally","_clean","shareElementThreshold","topCandidate","_cleanMatchedNodes","_cleanHeaders","paragraph","table","tbody","row","cell","_initializeNode","contentScore","_getClassWeight","nextNode","ignoreSelfAndKids","_textSimilarity","textA","textB","tokensA","Boolean","tokensB","token","_checkByline","undefined","rel","itemprop","_isValidByline","_getNodeAncestors","maxDepth","ancestors","push","_grabArticle","page","isPaging","pageCacheHtml","stripUnlikelyCandidates","_flagIsActive","elementsToScore","shouldRemoveTitleHeader","_articleLang","_isProbablyVisible","_headerDuplicatesTitle","_hasAncestorTag","childNode","_getLinkDensity","newNode","_hasChildBlockElement","candidates","elementToScore","innerText","min","floor","ancestor","level","scoreDivider","topCandidates","c","cl","candidate","candidateScore","t","aTopCandidate","splice","pop","parentOfTopCandidate","neededToCreateTopCandidate","alternativeCandidateAncestors","listsContainingThisAncestor","ancestorIndex","Number","lastScore","scoreThreshold","parentScore","siblingScoreThreshold","max","siblings","s","sl","append","contentBonus","linkDensity","nodeContent","nodeLength","search","div","parseSuccessful","textLength","_removeFlag","sort","a","b","articleDir","String","_unescapeHtmlEntities","htmlEscapeMap","hex","numStr","num","parseInt","fromCharCode","_getJSONLD","metadata","scripts","jsonLdElement","content","parsed","JSON","parse","match","it","headline","nameMatches","headlineMatches","author","description","excerpt","publisher","siteName","err","message","_getArticleMetadata","jsonld","values","metaElements","propertyPattern","namePattern","element","elementName","elementProperty","_isSingleImage","_unwrapNoscriptImages","imgs","img","noscripts","noscript","tmp","prevElement","previousElementSibling","prevImg","newImg","attrName","_removeScripts","scriptNode","nodeValue","has","normalizeSpaces","_getCharCount","cur","linkLength","linkNode","coefficient","weight","isEmbed","depth","_getRowAndColumnCount","rows","columns","trs","rowspan","columnsInThisRow","cells","j","colspan","root","tables","_readabilityDataTable","caption","sizeInfo","exec","srcCouldBeRemoved","b64starts","copyTo","_getTextDensity","tags","childrenLength","isDataTable","isList","listLength","listNodes","li","input","headingDensity","embedCount","embeds","contentLength","endOfSearchMarkerNode","headingNodes","shouldRemove","flag","numTags","jsonLd","paragraphs","dir","lang","require","isProbablyReaderable","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","key","o","defineProperty","enumerable","get","obj","prop","hasOwnProperty","r","Symbol","toStringTag","flarum","core","compat","app","_setPrototypeOf","setPrototypeOf","__proto__","ArticleModal","subClass","superClass","create","constructor","oninit","vnode","discussion","attrs","includedPosts","firstPostControls","headerItemsFirstComment","docElm","document","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","lastTime","params","requestParams","store","then","payload","included","discussionId","record","type","relationships","data","getById","createdAt","setPosts","postIds","items","post","time","PostComponent","postComponents","contentType","component","number","PostControls","toArray","ItemList","PostMeta","isEdited","isHidden","PostEdited","toISOString","dt","translator","trans","period","dayjs","fromNow","PostLoading","size","posts","m","redraw","bySlug","near","articleItems","commentItems","hide","fullscreenElement","exitFullscreen","error","state","close","Modal","extend","DiscussionPage","browserName","userAgent","browser","navigator","class","icon","onclick","documentClone","cloneNode","read_url","shareUrl","window","open","handleBrowser"],"sourceRoot":""}