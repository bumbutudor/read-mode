{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@tudor/read-mode/./src/common/index.ts","webpack://@tudor/read-mode/./src/forum/components/ArticleModal.js","webpack://@tudor/read-mode/./src/forum/components/ReadModeModal.js","webpack://@tudor/read-mode/./src/forum/index.js","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/Model']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/app']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/components/Button']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/components/Separator']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/components/SplitDropdown']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/extend']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['common/utils/string']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/LoadingPost']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/Modal']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/PostEdited']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/PostMeta']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['components/PostUser']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['forum/app']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['utils/ItemList']\"","webpack://@tudor/read-mode/external root \"flarum.core.compat['utils/PostControls']\"","webpack://@tudor/read-mode/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@tudor/read-mode/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@tudor/read-mode/webpack/bootstrap","webpack://@tudor/read-mode/webpack/runtime/compat get default export","webpack://@tudor/read-mode/webpack/runtime/define property getters","webpack://@tudor/read-mode/webpack/runtime/hasOwnProperty shorthand","webpack://@tudor/read-mode/webpack/runtime/make namespace object","webpack://@tudor/read-mode/./forum.ts"],"sourcesContent":["import app from 'flarum/common/app';\n\napp.initializers.add('tudor/read-mode', () => {\n  console.log('[tudor/read-mode] Hello, forum and admin!');\n});\n","import Modal from \"flarum/components/Modal\";\r\nimport ItemList from 'flarum/utils/ItemList';\r\nimport PostLoading from 'flarum/components/LoadingPost';\r\nimport SplitDropdown from 'flarum/common/components/SplitDropdown';\r\nimport Button from 'flarum/common/components/Button';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\nimport listItems from 'flarum/common/helpers/listItems';\r\nimport PostControls from 'flarum/utils/PostControls';\r\nimport PostUser from 'flarum/components/PostUser';\r\nimport PostMeta from 'flarum/components/PostMeta';\r\nimport PostEdited from 'flarum/components/PostEdited';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Separator from 'flarum/common/components/Separator';\r\n\r\nexport default class ArticleModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    this.discussion = this.attrs.discussion;\r\n\r\n    this.includedPosts = [];\r\n\r\n    this.firstPostControls = [];\r\n\r\n    this.headerItemsFirstComment = '';\r\n\r\n    \r\n\r\n    // app.history.push('discussion');\r\n    // console.log(app);\r\n    // console.log(this);\r\n    var docElm = document.documentElement;\r\n    if (docElm.requestFullscreen) {\r\n      docElm.requestFullscreen();\r\n    } else if (docElm.msRequestFullscreen) {\r\n      docElm.msRequestFullscreen();\r\n    } else if (docElm.mozRequestFullScreen) {\r\n      docElm.mozRequestFullScreen();\r\n    } else if (docElm.webkitRequestFullScreen) {\r\n      docElm.webkitRequestFullScreen();\r\n    }\r\n  }\r\n\r\n  className() {\r\n    return \"ReadModeModal Modal--full\";\r\n  }\r\n\r\n  title() {\r\n    return \"\";\r\n    // return this.discussion.title();\r\n  }\r\n\r\n  content() {\r\n\r\n    const params = this.requestParams();\r\n    app.store.find('discussions', this.discussion.id(), params)\r\n      .then((discussion) => {\r\n        // console.log(discussion);\r\n        if (discussion.payload && discussion.payload.included) {\r\n          let includedPosts = [];\r\n          const discussionId = discussion.id();\r\n    \r\n          includedPosts = discussion.payload.included\r\n            .filter(\r\n              (record) =>\r\n                record.type === 'posts' &&\r\n                record.relationships &&\r\n                record.relationships.discussion &&\r\n                record.relationships.discussion.data.id === discussionId\r\n            )\r\n            .map((record) => app.store.getById('posts', record.id))\r\n            .sort((a, b) => a.createdAt() - b.createdAt())\r\n            .slice(0, 20);\r\n\r\n          // return includedPosts;\r\n          this.setPosts(includedPosts);\r\n        }\r\n      });\r\n      \r\n    let lastTime;\r\n    const postIds = this.discussion.postIds();\r\n\r\n    const items = this.includedPosts.map((post, i) => {\r\n      let content;\r\n      const attrs = { 'data-index': i };\r\n\r\n      // console.log(attrs);\r\n      if (post) {\r\n        const time = post.createdAt();\r\n        const PostComponent = app.postComponents[post.contentType()];\r\n        content = PostComponent ? PostComponent.component({ post }) : '';\r\n        \r\n        if (post.number() == 1) {\r\n          this.firstPostControls = PostControls.controls(post, this).toArray();\r\n          const items = new ItemList();\r\n          \r\n\r\n          items.add(\r\n            'meta',\r\n            PostMeta.component({ post }),\r\n          );\r\n\r\n          if (post.isEdited() && !post.isHidden()) {\r\n            items.add('edited', PostEdited.component({ post }));\r\n          }\r\n\r\n          this.headerItemsFirstComment = items.toArray();\r\n          // console.log(content.dom);\r\n          // m.redraw();\r\n        }\r\n\r\n        attrs.key = 'post' + post.id();\r\n        attrs['data-time'] = time.toISOString();\r\n        attrs['data-number'] = post.number();\r\n        attrs['data-id'] = post.id();\r\n        attrs['data-type'] = post.contentType();\r\n\r\n        // If the post before this one was more than 4 days ago, we will\r\n        // display a 'time gap' indicating how long it has been in between\r\n        // the posts.\r\n        const dt = time - lastTime;\r\n\r\n        if (dt > 1000 * 60 * 60 * 24 * 4) {\r\n          content = [\r\n            <div className=\"PostStream-timeGap\">\r\n              <span>{app.translator.trans('core.forum.post_stream.time_lapsed_text', { period: dayjs().add(dt, 'ms').fromNow(true) })}</span>\r\n            </div>,\r\n            content,\r\n          ];\r\n        }\r\n\r\n        lastTime = time;\r\n      } else {\r\n        attrs.key = 'post' + postIds[i];\r\n\r\n        content = PostLoading.component();\r\n      }\r\n\r\n      return (\r\n        <div className=\"ReadModePostStream-item \" {...attrs}>\r\n          {content}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    // console.log(items);\r\n    // console.log(this.headerItemsFirstComment);\r\n\r\n    return [\r\n      items.length !== 0 ? [\r\n        <div className=\"DiscussionPage-stream ReadMode\">\r\n          <div className=\"Modal-header ArticleTitle\">\r\n            <h3 className=\"App-titleControl App-titleControl--text\">{this.discussion.title()}</h3>\r\n          </div>\r\n            <div className=\"PostStream\">{items[0]}</div>\r\n        </div>\r\n      ] : (\r\n        <LoadingIndicator size='large' />\r\n      )\r\n    ]\r\n  }\r\n\r\n  setPosts(posts) {\r\n    // console.log(posts);\r\n    this.includedPosts = posts;\r\n    m.redraw();\r\n  }\r\n\r\n  /**\r\n   * Get the parameters that should be passed in the API request to get the\r\n   * discussion.\r\n   *\r\n   * @return {Object}\r\n   */\r\n   requestParams() {\r\n    return {\r\n      bySlug: true,\r\n      page: { near: this.near },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Build an item list for the contents of the sidebar.\r\n   *\r\n   * @return {ItemList}\r\n   */\r\n   articleItems() {\r\n    const items = new ItemList();\r\n\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * Build an item list for the contents of the sidebar.\r\n   *\r\n   * @return {ItemList}\r\n   */\r\n   commentItems() {\r\n    const items = new ItemList();\r\n    return items;\r\n  }\r\n\r\n  hide(){\r\n    if (document.fullscreenElement) {\r\n        document.exitFullscreen()\r\n          .then(() => console.log(\"Document Exited from Full screen mode\"))\r\n          .catch((err) => console.error(err))\r\n      } else {\r\n        document.documentElement.requestFullscreen();\r\n      }\r\n    this.attrs.state.close();\r\n  }\r\n}","import app from 'flarum/forum/app';\r\nimport Modal from 'flarum/common/components/Modal';\r\nimport Button from 'flarum/common/components/Button';\r\nimport { truncate, getPlainContent } from 'flarum/common/utils/string';\r\nimport PostStream from 'flarum/forum/components/PostStream';\r\n\r\n\r\nexport default class ReadModeModal extends Modal {\r\n    oninit(vdom) {\r\n        super.oninit(vdom);\r\n        this.discussion = this.attrs.discussion;\r\n        // this.readMode = this.discussion.readMode();\r\n    }\r\n  \r\n    className() {\r\n        return 'ReadModeModal Modal--large';\r\n    }   \r\n\r\n    title() {\r\n        return app.translator.trans('read-mode.forum.modal.title');\r\n    }\r\n\r\n    content() {\r\n        // const url = encodeURIComponent(this.discussion.shareUrl());\r\n        const title = encodeURIComponent(app.title);\r\n        \r\n        const firstPost = this.discussion.firstPost()\r\n          ? this.discussion.firstPost()\r\n          : '';\r\n\r\n        // const firstPostContent = m.trust(firstPost.contentHtml());\r\n        const firstPostContent = getPlainContent(firstPost.contentHtml());\r\n        // console.log(firstPostContent);\r\n\r\n       \r\n        if (firstPost) {\r\n            const content = <div inert>{firstPostContent}</div>;\r\n        }\r\n\r\n        return (\r\n          <div className=\"Modal-body\">\r\n            <div className=\"Form Form--centered\">\r\n              <div className=\"Form-group\">\r\n                <div className=\"ReadModeModal-content\">\r\n                    {/* {title}\r\n                    {content} */}\r\n                    <div className=\"DiscussionPage-stream\">\r\n                        {PostStream.component({\r\n                        discussion: this.discussion,\r\n                        stream: this.stream,\r\n                        onPositionChange: this.positionChanged.bind(this),\r\n                        })}\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport Button from 'flarum/common/components/Button';\nimport Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\n\nimport ReadModeModal from './components/ReadModeModal';\nimport ArticleModal from './components/ArticleModal';\n\napp.initializers.add('tudor/read-mode', () => {\n  \n  // Discussion.prototype.shareUrl = Model.attribute('shareUrl');\n\n  extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n      items.add('read-mode',\n        <Button\n          class=\"Button Button-icon Button--read-mode\"\n          icon=\"fas fa-book-reader\"\n          onclick={() =>\n            app.modal.show(ArticleModal, {\n              discussion: this.discussion,\n            })\n          }\n        >\n          {app.translator.trans('read-mode.forum.discussion.read_mode_button')}\n        </Button>,\n        -1\n      );\n  });\n\n});\n","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['common/components/Separator'];","module.exports = flarum.core.compat['common/components/SplitDropdown'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['common/models/Discussion'];","module.exports = flarum.core.compat['common/utils/string'];","module.exports = flarum.core.compat['components/LoadingPost'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/PostEdited'];","module.exports = flarum.core.compat['components/PostMeta'];","module.exports = flarum.core.compat['components/PostUser'];","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['forum/components/DiscussionPage'];","module.exports = flarum.core.compat['forum/components/PostStream'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/PostControls'];","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/common';\nexport * from './src/forum';\n"],"names":["app","initializers","add","console","log","Modal","ItemList","PostLoading","SplitDropdown","Button","DiscussionControls","listItems","PostControls","PostUser","PostMeta","PostEdited","LoadingIndicator","Separator","ArticleModal","oninit","vnode","discussion","attrs","includedPosts","firstPostControls","headerItemsFirstComment","docElm","document","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","className","title","content","params","requestParams","store","find","id","then","payload","included","discussionId","filter","record","type","relationships","data","map","getById","sort","a","b","createdAt","slice","setPosts","lastTime","postIds","items","post","i","time","PostComponent","postComponents","contentType","component","number","controls","toArray","isEdited","isHidden","key","toISOString","dt","translator","trans","period","dayjs","fromNow","length","posts","m","redraw","bySlug","page","near","articleItems","commentItems","hide","fullscreenElement","exitFullscreen","err","error","state","close","truncate","getPlainContent","PostStream","ReadModeModal","vdom","encodeURIComponent","firstPost","firstPostContent","contentHtml","stream","onPositionChange","positionChanged","bind","extend","DiscussionPage","Model","Discussion","prototype","modal","show","setPrototypeOf","_inheritsLoose","subClass","superClass","Object","create","constructor","_setPrototypeOf","o","p","__proto__"],"sourceRoot":""}